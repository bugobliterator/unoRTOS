   1               		.file	"ping.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 166               	.global	ping
 168               	ping:
 169               		.stabd	46,0,0
   1:../freeRTOS750/lib_inet/ping.c **** /**
   2:../freeRTOS750/lib_inet/ping.c ****  @file		ping.c
   3:../freeRTOS750/lib_inet/ping.c ****  @brief 	Implementation of Ping - To send 'ping-request' to peer & To receive 'ping-reply' from pee
   4:../freeRTOS750/lib_inet/ping.c ****  */
   5:../freeRTOS750/lib_inet/ping.c **** 
   6:../freeRTOS750/lib_inet/ping.c **** #include <stdlib.h> // For rand();
   7:../freeRTOS750/lib_inet/ping.c **** #include <string.h>
   8:../freeRTOS750/lib_inet/ping.c **** #include <util/delay.h>
   9:../freeRTOS750/lib_inet/ping.c **** 
  10:../freeRTOS750/lib_inet/ping.c **** /* Scheduler include files. */
  11:../freeRTOS750/lib_inet/ping.c **** #include <FreeRTOS.h>
  12:../freeRTOS750/lib_inet/ping.c **** #include <task.h>
  13:../freeRTOS750/lib_inet/ping.c **** #include <queue.h>
  14:../freeRTOS750/lib_inet/ping.c **** #include <semphr.h>
  15:../freeRTOS750/lib_inet/ping.c **** 
  16:../freeRTOS750/lib_inet/ping.c **** #include <lib_serial.h>
  17:../freeRTOS750/lib_inet/ping.c **** 
  18:../freeRTOS750/lib_inet/ping.c **** #include <socket.h>
  19:../freeRTOS750/lib_inet/ping.c **** #include <inet.h>
  20:../freeRTOS750/lib_inet/ping.c **** 
  21:../freeRTOS750/lib_inet/ping.c **** 
  22:../freeRTOS750/lib_inet/ping.c **** static void SendPingReply(PING_MSG *pingrequest, uint32_t destaddr );
  23:../freeRTOS750/lib_inet/ping.c **** 
  24:../freeRTOS750/lib_inet/ping.c **** /**
  25:../freeRTOS750/lib_inet/ping.c ****  @brief 	Send ping-request to the specified peer and receive ping-reply from the specified peer.
  26:../freeRTOS750/lib_inet/ping.c ****  @return	1 - success, 0 - fail because free socket is not found or can't be opened.
  27:../freeRTOS750/lib_inet/ping.c ****  */
  28:../freeRTOS750/lib_inet/ping.c **** uint8_t ping(
  29:../freeRTOS750/lib_inet/ping.c **** 	uint8_t count, 		/**< Ping request count. */
  30:../freeRTOS750/lib_inet/ping.c **** 	uint16_t time, 		/**< wait ping reply time (unit : ms) */
  31:../freeRTOS750/lib_inet/ping.c **** 	uint8_t* addr, 		/**< Peer IP Address string in dotted decimal format */
  32:../freeRTOS750/lib_inet/ping.c **** 	PING_LOG* log		/**< result of ping */
  33:../freeRTOS750/lib_inet/ping.c **** 	)
  34:../freeRTOS750/lib_inet/ping.c **** {
 171               	.LM0:
 172               	.LFBB1:
 173 0000 2F92      		push r2
 174 0002 3F92      		push r3
 175 0004 4F92      		push r4
 176 0006 5F92      		push r5
 177 0008 6F92      		push r6
 178 000a 7F92      		push r7
 179 000c 8F92      		push r8
 180 000e 9F92      		push r9
 181 0010 AF92      		push r10
 182 0012 BF92      		push r11
 183 0014 CF92      		push r12
 184 0016 DF92      		push r13
 185 0018 EF92      		push r14
 186 001a FF92      		push r15
 187 001c 0F93      		push r16
 188 001e 1F93      		push r17
 189 0020 CF93      		push r28
 190 0022 DF93      		push r29
 191 0024 CDB7      		in r28,__SP_L__
 192 0026 DEB7      		in r29,__SP_H__
 193 0028 6297      		sbiw r28,18
 194 002a 0FB6      		in __tmp_reg__,__SREG__
 195 002c F894      		cli
 196 002e DEBF      		out __SP_H__,r29
 197 0030 0FBE      		out __SREG__,__tmp_reg__
 198 0032 CDBF      		out __SP_L__,r28
 199               	/* prologue: function */
 200               	/* frame size = 18 */
 201               	/* stack size = 36 */
 202               	.L__stack_usage = 36
 203 0034 B82E      		mov r11,r24
 204 0036 8B01      		movw r16,r22
 205 0038 942E      		mov r9,r20
 206 003a 852E      		mov r8,r21
 207 003c 1901      		movw r2,r18
  35:../freeRTOS750/lib_inet/ping.c **** 
  36:../freeRTOS750/lib_inet/ping.c **** 	PING_MSG* pPingRequest;		// pointer for Ping Request
  37:../freeRTOS750/lib_inet/ping.c **** 	PING_MSG* pPingReply;		// pointer for Ping Reply
  38:../freeRTOS750/lib_inet/ping.c **** 	uint32_t peerip;            // 32 bit Peer IP Address
  39:../freeRTOS750/lib_inet/ping.c **** 	uint32_t tempip;			// IP address received from a destination
  40:../freeRTOS750/lib_inet/ping.c **** 	uint16_t port;              // port number received from a destination
  41:../freeRTOS750/lib_inet/ping.c **** 
  42:../freeRTOS750/lib_inet/ping.c **** 	SOCKET   s;					// socket variable for pinging
  43:../freeRTOS750/lib_inet/ping.c **** 
  44:../freeRTOS750/lib_inet/ping.c **** 	uint16_t RandomSeqNum;		// Ping-Request ID
  45:../freeRTOS750/lib_inet/ping.c **** 
  46:../freeRTOS750/lib_inet/ping.c **** 	uint16_t len;
  47:../freeRTOS750/lib_inet/ping.c **** 	uint8_t  IsReceived;    	// Received packet = 1, not received packet = 0
  48:../freeRTOS750/lib_inet/ping.c **** 
  49:../freeRTOS750/lib_inet/ping.c ****     portTickType xInitialTick;
  50:../freeRTOS750/lib_inet/ping.c **** 
  51:../freeRTOS750/lib_inet/ping.c **** 	/* Initialise PingRequest */
  52:../freeRTOS750/lib_inet/ping.c **** 
  53:../freeRTOS750/lib_inet/ping.c **** 
  54:../freeRTOS750/lib_inet/ping.c **** 	if( !(pPingRequest = (PING_MSG *) pvPortMalloc( sizeof(PING_MSG) )))
 209               	.LM1:
 210 003e 80E4      		ldi r24,lo8(64)
 211 0040 90E0      		ldi r25,0
 212 0042 0E94 0000 		call pvPortMalloc
 213 0046 7C01      		movw r14,r24
 214 0048 0097      		sbiw r24,0
 215 004a 01F4      		brne .+2
 216 004c 00C0      		rjmp .L30
  55:../freeRTOS750/lib_inet/ping.c **** 		return 0;
  56:../freeRTOS750/lib_inet/ping.c **** 
  57:../freeRTOS750/lib_inet/ping.c **** 	if( !(pPingReply   = (PING_MSG *) pvPortMalloc( sizeof(PING_MSG) )))
 218               	.LM2:
 219 004e 80E4      		ldi r24,lo8(64)
 220 0050 90E0      		ldi r25,0
 221 0052 0E94 0000 		call pvPortMalloc
 222 0056 2C01      		movw r4,r24
 223 0058 0097      		sbiw r24,0
 224 005a 01F4      		brne .L3
  58:../freeRTOS750/lib_inet/ping.c **** 	{
  59:../freeRTOS750/lib_inet/ping.c **** 		vPortFree(pPingRequest);
 226               	.LM3:
 227 005c C701      		movw r24,r14
 228 005e 00C0      		rjmp .L44
 229               	.L3:
  60:../freeRTOS750/lib_inet/ping.c **** 		return 0;
  61:../freeRTOS750/lib_inet/ping.c **** 	}
  62:../freeRTOS750/lib_inet/ping.c **** 
  63:../freeRTOS750/lib_inet/ping.c **** 	RandomSeqNum = htons( (uint16_t)rand());		// set ping-request's sequence number to random integer 
 231               	.LM4:
 232 0060 0E94 0000 		call rand
 233 0064 0E94 0000 		call htons
 234 0068 A82E      		mov r10,r24
 235 006a 792E      		mov r7,r25
  64:../freeRTOS750/lib_inet/ping.c **** 
  65:../freeRTOS750/lib_inet/ping.c **** 	pPingRequest->type = 0x08;           			// Ping-Request - ICMP
 237               	.LM5:
 238 006c 88E0      		ldi r24,lo8(8)
 239 006e F701      		movw r30,r14
 240 0070 8083      		st Z,r24
  66:../freeRTOS750/lib_inet/ping.c **** 	pPingRequest->code = 0x00;						// always 0
 242               	.LM6:
 243 0072 1182      		std Z+1,__zero_reg__
  67:../freeRTOS750/lib_inet/ping.c **** 	pPingRequest->checksum = 0;						// value of checksum before calculating checksum of ping-request 
 245               	.LM7:
 246 0074 1382      		std Z+3,__zero_reg__
 247 0076 1282      		std Z+2,__zero_reg__
  68:../freeRTOS750/lib_inet/ping.c **** 	pPingRequest->id = htons(PING_ID);				// set ping-request ID
 249               	.LM8:
 250 0078 8FEE      		ldi r24,lo8(-17)
 251 007a 9EEB      		ldi r25,lo8(-66)
 252 007c 0E94 0000 		call htons
 253 0080 F701      		movw r30,r14
 254 0082 9583      		std Z+5,r25
 255 0084 8483      		std Z+4,r24
  69:../freeRTOS750/lib_inet/ping.c **** 
  70:../freeRTOS750/lib_inet/ping.c **** 	for(uint16_t i = 0 ; i < PING_OPT_LEN; i++)
 257               	.LM9:
 258 0086 20E0      		ldi r18,0
 259 0088 30E0      		ldi r19,0
 260               	.LBB17:
  71:../freeRTOS750/lib_inet/ping.c **** 		pPingRequest->OPT[i] = 'a' + i % 23;		// fill 'a'~'w' characters into ping-request's data
 262               	.LM10:
 263 008a 97E1      		ldi r25,lo8(23)
 264 008c C92E      		mov r12,r25
 265 008e D12C      		mov r13,__zero_reg__
 266               	.L4:
  28:../freeRTOS750/lib_inet/ping.c **** uint8_t ping(
 268               	.LM11:
 269 0090 F701      		movw r30,r14
 270 0092 E20F      		add r30,r18
 271 0094 F31F      		adc r31,r19
 273               	.LM12:
 274 0096 C901      		movw r24,r18
 275 0098 B601      		movw r22,r12
 276 009a 0E94 0000 		call __udivmodhi4
 277 009e 8F59      		subi r24,lo8(-(97))
 278 00a0 8087      		std Z+8,r24
  70:../freeRTOS750/lib_inet/ping.c **** 	for(uint16_t i = 0 ; i < PING_OPT_LEN; i++)
 280               	.LM13:
 281 00a2 2F5F      		subi r18,-1
 282 00a4 3F4F      		sbci r19,-1
 283 00a6 2833      		cpi r18,56
 284 00a8 3105      		cpc r19,__zero_reg__
 285 00aa 01F4      		brne .L4
 286               	.LBE17:
  72:../freeRTOS750/lib_inet/ping.c **** 
  73:../freeRTOS750/lib_inet/ping.c **** 	/* Initialise result of ping */
  74:../freeRTOS750/lib_inet/ping.c **** 	memset((void*)log,0,sizeof(PING_LOG));
 288               	.LM14:
 289 00ac 80E1      		ldi r24,lo8(16)
 290 00ae F101      		movw r30,r2
 291               		0:
 292 00b0 1192      		st Z+,__zero_reg__
 293 00b2 8A95      		dec r24
 294 00b4 01F4      		brne 0b
  75:../freeRTOS750/lib_inet/ping.c **** 
  76:../freeRTOS750/lib_inet/ping.c ****     /* Verify arguments */
  77:../freeRTOS750/lib_inet/ping.c **** 	if(!count) count = 4;					// set count to default value (4 pings)
 296               	.LM15:
 297 00b6 B110      		cpse r11,__zero_reg__
 298 00b8 00C0      		rjmp .L5
 299 00ba 84E0      		ldi r24,lo8(4)
 300 00bc B82E      		mov r11,r24
 301               	.L5:
  78:../freeRTOS750/lib_inet/ping.c **** 	if(!time) time = 1000;					// set response time to default value (1000ms)
 303               	.LM16:
 304 00be 0115      		cp r16,__zero_reg__
 305 00c0 1105      		cpc r17,__zero_reg__
 306 00c2 01F4      		brne .L6
 307 00c4 08EE      		ldi r16,lo8(-24)
 308 00c6 13E0      		ldi r17,lo8(3)
 309               	.L6:
  79:../freeRTOS750/lib_inet/ping.c **** 
  80:../freeRTOS750/lib_inet/ping.c **** 	/* Create a ping socket */
  81:../freeRTOS750/lib_inet/ping.c **** 	s = getSocket(SOCK_CLOSED,0);
 311               	.LM17:
 312 00c8 60E0      		ldi r22,0
 313 00ca 80E0      		ldi r24,0
 314 00cc 0E94 0000 		call getSocket
 315 00d0 D82E      		mov r13,r24
  82:../freeRTOS750/lib_inet/ping.c **** 	if(s == MAX_SOCK_NUM)					// if it isn't exist free socket, Error
 317               	.LM18:
 318 00d2 F4E0      		ldi r31,lo8(4)
 319 00d4 8F13      		cpse r24,r31
 320 00d6 00C0      		rjmp .L7
 321 00d8 00C0      		rjmp .L45
 322               	.L7:
  83:../freeRTOS750/lib_inet/ping.c **** 	{
  84:../freeRTOS750/lib_inet/ping.c **** 		vPortFree(pPingRequest);
  85:../freeRTOS750/lib_inet/ping.c **** 		vPortFree(pPingReply);
  86:../freeRTOS750/lib_inet/ping.c **** 		return 0;
  87:../freeRTOS750/lib_inet/ping.c **** 	}
  88:../freeRTOS750/lib_inet/ping.c **** 
  89:../freeRTOS750/lib_inet/ping.c **** 	setSn_PROTO(s,IP_PROTO_ICMP);           	// Set upper-protocol of IP protocol
 324               	.LM19:
 325 00da 61E0      		ldi r22,lo8(1)
 326 00dc 0E94 0000 		call setSn_PROTO
  90:../freeRTOS750/lib_inet/ping.c **** 	if( socket( s, Sn_MR_IPRAW, 3000, 0) == 0)	// Open IP_RAW Mode , if fail then Error
 328               	.LM20:
 329 00e0 20E0      		ldi r18,0
 330 00e2 48EB      		ldi r20,lo8(-72)
 331 00e4 5BE0      		ldi r21,lo8(11)
 332 00e6 63E0      		ldi r22,lo8(3)
 333 00e8 8D2D      		mov r24,r13
 334 00ea 0E94 0000 		call socket
 335 00ee 8111      		cpse r24,__zero_reg__
 336 00f0 00C0      		rjmp .L8
 337 00f2 00C0      		rjmp .L45
 338               	.L8:
  91:../freeRTOS750/lib_inet/ping.c **** 	{
  92:../freeRTOS750/lib_inet/ping.c **** 		vPortFree(pPingRequest);
  93:../freeRTOS750/lib_inet/ping.c **** 		vPortFree(pPingReply);
  94:../freeRTOS750/lib_inet/ping.c **** 		return 0;
  95:../freeRTOS750/lib_inet/ping.c **** 	}
  96:../freeRTOS750/lib_inet/ping.c **** 	peerip = htonl( inet_addr(addr));				// convert address string into 32bit address
 340               	.LM21:
 341 00f4 892D      		mov r24,r9
 342 00f6 982D      		mov r25,r8
 343 00f8 0E94 0000 		call inet_addr
 344 00fc 0E94 0000 		call htonl
 345 0100 6987      		std Y+9,r22
 346 0102 7A87      		std Y+10,r23
 347 0104 8B87      		std Y+11,r24
 348 0106 9C87      		std Y+12,r25
  97:../freeRTOS750/lib_inet/ping.c **** 
  98:../freeRTOS750/lib_inet/ping.c **** 	xSerialPrintf_P(PSTR("\r\nPinging %s with %d bytes of data:\r\n"), addr, (sizeof(PING_MSG) - 8));
 350               	.LM22:
 351 0108 1F92      		push __zero_reg__
 352 010a 88E3      		ldi r24,lo8(56)
 353 010c 8F93      		push r24
 354 010e 8F92      		push r8
 355 0110 9F92      		push r9
 356 0112 80E0      		ldi r24,lo8(__c.2755)
 357 0114 90E0      		ldi r25,hi8(__c.2755)
 358 0116 9F93      		push r25
 359 0118 8F93      		push r24
 360 011a 0E94 0000 		call xSerialPrintf_P
  99:../freeRTOS750/lib_inet/ping.c **** 
 100:../freeRTOS750/lib_inet/ping.c **** 
 101:../freeRTOS750/lib_inet/ping.c **** 	/* Ping Service */
 102:../freeRTOS750/lib_inet/ping.c **** 	while( count-- != 0)
 103:../freeRTOS750/lib_inet/ping.c **** 	{
 104:../freeRTOS750/lib_inet/ping.c **** 		IsReceived = 0;
 105:../freeRTOS750/lib_inet/ping.c **** 		pPingRequest->seqNum = htons( RandomSeqNum++);	// Increase Sequence number for next ping-request 
 106:../freeRTOS750/lib_inet/ping.c **** 		pPingRequest->checksum = 0;
 107:../freeRTOS750/lib_inet/ping.c **** 		pPingRequest->checksum = htons( checksum( (uint8_t*)pPingRequest, sizeof(PING_MSG)));	// update c
 108:../freeRTOS750/lib_inet/ping.c **** 
 109:../freeRTOS750/lib_inet/ping.c **** 		(*log).PingRequest++;							// Increase PingRequest's value
 110:../freeRTOS750/lib_inet/ping.c **** 
 111:../freeRTOS750/lib_inet/ping.c **** 		xInitialTick = xTaskGetTickCount();
 112:../freeRTOS750/lib_inet/ping.c **** 
 113:../freeRTOS750/lib_inet/ping.c **** 		if( sendto( s, (const uint8_t *)pPingRequest, sizeof(PING_MSG), (uint8_t*)&peerip, 3000)== 0)	// 
 114:../freeRTOS750/lib_inet/ping.c **** 		{
 115:../freeRTOS750/lib_inet/ping.c **** 			(*log).ARPErr++;							// Increase ARPErr
 116:../freeRTOS750/lib_inet/ping.c **** 			close(s);									// close the pinging socket
 117:../freeRTOS750/lib_inet/ping.c **** 
 118:../freeRTOS750/lib_inet/ping.c **** 			/* Reopen pinging socket */
 119:../freeRTOS750/lib_inet/ping.c **** 			setSn_PROTO(s,IP_PROTO_ICMP);
 120:../freeRTOS750/lib_inet/ping.c **** 			if(socket( s, Sn_MR_IPRAW, 3000, 0)==0)
 121:../freeRTOS750/lib_inet/ping.c **** 				{
 122:../freeRTOS750/lib_inet/ping.c **** 				vPortFree(pPingRequest);
 123:../freeRTOS750/lib_inet/ping.c **** 				vPortFree(pPingReply);
 124:../freeRTOS750/lib_inet/ping.c **** 				return 0;
 125:../freeRTOS750/lib_inet/ping.c **** 				}
 126:../freeRTOS750/lib_inet/ping.c **** 			continue;
 127:../freeRTOS750/lib_inet/ping.c **** 		}
 128:../freeRTOS750/lib_inet/ping.c **** 
 129:../freeRTOS750/lib_inet/ping.c **** 		while( xTaskGetTickCount() < (xInitialTick + ( time / portTICK_RATE_MS )) )	// as long as time is
 362               	.LM23:
 363 011e C801      		movw r24,r16
 364 0120 68EE      		ldi r22,lo8(-24)
 365 0122 73E0      		ldi r23,lo8(3)
 366 0124 0E94 0000 		call __udivmodhi4
 367 0128 7A8B      		std Y+18,r23
 368 012a 698B      		std Y+17,r22
 102:../freeRTOS750/lib_inet/ping.c **** 	while( count-- != 0)
 370               	.LM24:
 371 012c 0F90      		pop __tmp_reg__
 372 012e 0F90      		pop __tmp_reg__
 373 0130 0F90      		pop __tmp_reg__
 374 0132 0F90      		pop __tmp_reg__
 375 0134 0F90      		pop __tmp_reg__
 376 0136 0F90      		pop __tmp_reg__
  63:../freeRTOS750/lib_inet/ping.c **** 	RandomSeqNum = htons( (uint16_t)rand());		// set ping-request's sequence number to random integer 
 378               	.LM25:
 379 0138 8A2D      		mov r24,r10
 380 013a 972D      		mov r25,r7
  28:../freeRTOS750/lib_inet/ping.c **** uint8_t ping(
 382               	.LM26:
 383 013c BA0C      		add r11,r10
 102:../freeRTOS750/lib_inet/ping.c **** 	while( count-- != 0)
 385               	.LM27:
 386 013e 00C0      		rjmp .L9
 387               	.L29:
 105:../freeRTOS750/lib_inet/ping.c **** 		pPingRequest->seqNum = htons( RandomSeqNum++);	// Increase Sequence number for next ping-request 
 389               	.LM28:
 390 0140 9C01      		movw r18,r24
 391 0142 2F5F      		subi r18,-1
 392 0144 3F4F      		sbci r19,-1
 393 0146 388B      		std Y+16,r19
 394 0148 2F87      		std Y+15,r18
 395 014a 0E94 0000 		call htons
 396 014e F701      		movw r30,r14
 397 0150 9783      		std Z+7,r25
 398 0152 8683      		std Z+6,r24
 106:../freeRTOS750/lib_inet/ping.c **** 		pPingRequest->checksum = 0;
 400               	.LM29:
 401 0154 1382      		std Z+3,__zero_reg__
 402 0156 1282      		std Z+2,__zero_reg__
 107:../freeRTOS750/lib_inet/ping.c **** 		pPingRequest->checksum = htons( checksum( (uint8_t*)pPingRequest, sizeof(PING_MSG)));	// update c
 404               	.LM30:
 405 0158 60E4      		ldi r22,lo8(64)
 406 015a 70E0      		ldi r23,0
 407 015c C701      		movw r24,r14
 408 015e 0E94 0000 		call checksum
 409 0162 0E94 0000 		call htons
 410 0166 F701      		movw r30,r14
 411 0168 9383      		std Z+3,r25
 412 016a 8283      		std Z+2,r24
 109:../freeRTOS750/lib_inet/ping.c **** 		(*log).PingRequest++;							// Increase PingRequest's value
 414               	.LM31:
 415 016c F101      		movw r30,r2
 416 016e 8285      		ldd r24,Z+10
 417 0170 9385      		ldd r25,Z+11
 418 0172 0196      		adiw r24,1
 419 0174 9387      		std Z+11,r25
 420 0176 8287      		std Z+10,r24
 111:../freeRTOS750/lib_inet/ping.c **** 		xInitialTick = xTaskGetTickCount();
 422               	.LM32:
 423 0178 0E94 0000 		call xTaskGetTickCount
 424 017c 4C01      		movw r8,r24
 113:../freeRTOS750/lib_inet/ping.c **** 		if( sendto( s, (const uint8_t *)pPingRequest, sizeof(PING_MSG), (uint8_t*)&peerip, 3000)== 0)	// 
 426               	.LM33:
 427 017e 08EB      		ldi r16,lo8(-72)
 428 0180 1BE0      		ldi r17,lo8(11)
 429 0182 9E01      		movw r18,r28
 430 0184 275F      		subi r18,-9
 431 0186 3F4F      		sbci r19,-1
 432 0188 40E4      		ldi r20,lo8(64)
 433 018a 50E0      		ldi r21,0
 434 018c B701      		movw r22,r14
 435 018e 8D2D      		mov r24,r13
 436 0190 0E94 0000 		call sendto
 437 0194 892B      		or r24,r25
 438 0196 01F0      		breq .L10
 440               	.LM34:
 441 0198 6988      		ldd r6,Y+17
 442 019a 7A88      		ldd r7,Y+18
 443 019c 680C      		add r6,r8
 444 019e 791C      		adc r7,r9
 445 01a0 C12C      		mov r12,__zero_reg__
 446 01a2 00C0      		rjmp .L41
 447               	.L10:
 115:../freeRTOS750/lib_inet/ping.c **** 			(*log).ARPErr++;							// Increase ARPErr
 449               	.LM35:
 450 01a4 F101      		movw r30,r2
 451 01a6 8085      		ldd r24,Z+8
 452 01a8 9185      		ldd r25,Z+9
 453 01aa 0196      		adiw r24,1
 454 01ac 9187      		std Z+9,r25
 455 01ae 8087      		std Z+8,r24
 116:../freeRTOS750/lib_inet/ping.c **** 			close(s);									// close the pinging socket
 457               	.LM36:
 458 01b0 8D2D      		mov r24,r13
 459 01b2 0E94 0000 		call close
 119:../freeRTOS750/lib_inet/ping.c **** 			setSn_PROTO(s,IP_PROTO_ICMP);
 461               	.LM37:
 462 01b6 61E0      		ldi r22,lo8(1)
 463 01b8 8D2D      		mov r24,r13
 464 01ba 0E94 0000 		call setSn_PROTO
 120:../freeRTOS750/lib_inet/ping.c **** 			if(socket( s, Sn_MR_IPRAW, 3000, 0)==0)
 466               	.LM38:
 467 01be 20E0      		ldi r18,0
 468 01c0 48EB      		ldi r20,lo8(-72)
 469 01c2 5BE0      		ldi r21,lo8(11)
 470 01c4 63E0      		ldi r22,lo8(3)
 471 01c6 8D2D      		mov r24,r13
 472 01c8 0E94 0000 		call socket
 473 01cc 8823      		tst r24
 474 01ce 01F4      		brne .+2
 475 01d0 00C0      		rjmp .L45
 476               	.L26:
 478               	.LM39:
 479 01d2 8F85      		ldd r24,Y+15
 480 01d4 9889      		ldd r25,Y+16
 481 01d6 00C0      		rjmp .L9
 482               	.L28:
 130:../freeRTOS750/lib_inet/ping.c **** 		{
 131:../freeRTOS750/lib_inet/ping.c **** 
 132:../freeRTOS750/lib_inet/ping.c **** 			if((len = getSn_RX_RSR(s)) > 0)		// Has pinging socket received a packet?
 484               	.LM40:
 485 01d8 8D2D      		mov r24,r13
 486 01da 0E94 0000 		call getSn_RX_RSR
 487 01de 0097      		sbiw r24,0
 488 01e0 01F4      		brne .+2
 489 01e2 00C0      		rjmp .L13
 133:../freeRTOS750/lib_inet/ping.c **** 			{
 134:../freeRTOS750/lib_inet/ping.c **** 				len = recvfrom( s, (uint8_t*)pPingReply, len, (uint8_t*)&tempip, &port);	// receive a packet fr
 491               	.LM41:
 492 01e4 8E01      		movw r16,r28
 493 01e6 035F      		subi r16,-13
 494 01e8 1F4F      		sbci r17,-1
 495 01ea 9E01      		movw r18,r28
 496 01ec 2B5F      		subi r18,-5
 497 01ee 3F4F      		sbci r19,-1
 498 01f0 AC01      		movw r20,r24
 499 01f2 B201      		movw r22,r4
 500 01f4 8D2D      		mov r24,r13
 501 01f6 0E94 0000 		call recvfrom
 502 01fa 8C01      		movw r16,r24
 135:../freeRTOS750/lib_inet/ping.c **** 
 136:../freeRTOS750/lib_inet/ping.c **** 				xSerialPrintf_P(PSTR("\r\nReply from %s"), inet_ntoa( ntohl(tempip))); // convert 32 bit unknow
 504               	.LM42:
 505 01fc 6D81      		ldd r22,Y+5
 506 01fe 7E81      		ldd r23,Y+6
 507 0200 8F81      		ldd r24,Y+7
 508 0202 9885      		ldd r25,Y+8
 509 0204 0E94 0000 		call ntohl
 510 0208 0E94 0000 		call inet_ntoa
 511 020c 9F93      		push r25
 512 020e 8F93      		push r24
 513 0210 20E0      		ldi r18,lo8(__c.2758)
 514 0212 30E0      		ldi r19,hi8(__c.2758)
 515 0214 3F93      		push r19
 516 0216 2F93      		push r18
 517 0218 0E94 0000 		call xSerialPrintf_P
 137:../freeRTOS750/lib_inet/ping.c **** 
 138:../freeRTOS750/lib_inet/ping.c **** 				if( checksum((uint8_t*)pPingReply,len) != 0)		// if the packet's checksum value is correct
 519               	.LM43:
 520 021c B801      		movw r22,r16
 521 021e C201      		movw r24,r4
 522 0220 0E94 0000 		call checksum
 523 0224 0F90      		pop __tmp_reg__
 524 0226 0F90      		pop __tmp_reg__
 525 0228 0F90      		pop __tmp_reg__
 526 022a 0F90      		pop __tmp_reg__
 527 022c 892B      		or r24,r25
 528 022e 01F0      		breq .L14
 139:../freeRTOS750/lib_inet/ping.c **** 				{                                                   // not correct
 140:../freeRTOS750/lib_inet/ping.c **** 					(*log).CheckSumErr++;                           // checksum error
 530               	.LM44:
 531 0230 F101      		movw r30,r2
 532 0232 8081      		ld r24,Z
 533 0234 9181      		ldd r25,Z+1
 534 0236 0196      		adiw r24,1
 535 0238 9183      		std Z+1,r25
 536 023a 8083      		st Z,r24
 141:../freeRTOS750/lib_inet/ping.c **** 					if(tempip == peerip) IsReceived = 1;
 538               	.LM45:
 539 023c 4D81      		ldd r20,Y+5
 540 023e 5E81      		ldd r21,Y+6
 541 0240 6F81      		ldd r22,Y+7
 542 0242 7885      		ldd r23,Y+8
 543 0244 8985      		ldd r24,Y+9
 544 0246 9A85      		ldd r25,Y+10
 545 0248 AB85      		ldd r26,Y+11
 546 024a BC85      		ldd r27,Y+12
 547 024c 4817      		cp r20,r24
 548 024e 5907      		cpc r21,r25
 549 0250 6A07      		cpc r22,r26
 550 0252 7B07      		cpc r23,r27
 551 0254 01F4      		brne .L15
 552 0256 CC24      		clr r12
 553 0258 C394      		inc r12
 554               	.L15:
 142:../freeRTOS750/lib_inet/ping.c **** 					xSerialPrint_P(PSTR(": Checksum Error"));
 556               	.LM46:
 557 025a 80E0      		ldi r24,lo8(__c.2760)
 558 025c 90E0      		ldi r25,hi8(__c.2760)
 559 025e 0E94 0000 		call xSerialPrint_P
 560 0262 00C0      		rjmp .L16
 561               	.L14:
 143:../freeRTOS750/lib_inet/ping.c **** 				}
 144:../freeRTOS750/lib_inet/ping.c **** 				else if(pPingReply->type == 0)					// if the received packet is ping-reply
 563               	.LM47:
 564 0264 F201      		movw r30,r4
 565 0266 8081      		ld r24,Z
 566 0268 8111      		cpse r24,__zero_reg__
 567 026a 00C0      		rjmp .L17
 145:../freeRTOS750/lib_inet/ping.c **** 				{
 146:../freeRTOS750/lib_inet/ping.c **** 
 147:../freeRTOS750/lib_inet/ping.c **** 					if((pPingReply->id!=pPingRequest->id) || (pPingReply->seqNum!=pPingRequest->seqNum) || (tempip
 569               	.LM48:
 570 026c 2481      		ldd r18,Z+4
 571 026e 3581      		ldd r19,Z+5
 572 0270 F701      		movw r30,r14
 573 0272 8481      		ldd r24,Z+4
 574 0274 9581      		ldd r25,Z+5
 575 0276 2817      		cp r18,r24
 576 0278 3907      		cpc r19,r25
 577 027a 01F4      		brne .L18
 579               	.LM49:
 580 027c F201      		movw r30,r4
 581 027e 2681      		ldd r18,Z+6
 582 0280 3781      		ldd r19,Z+7
 583 0282 F701      		movw r30,r14
 584 0284 8681      		ldd r24,Z+6
 585 0286 9781      		ldd r25,Z+7
 586 0288 2817      		cp r18,r24
 587 028a 3907      		cpc r19,r25
 588 028c 01F4      		brne .L18
 589 028e 4D81      		ldd r20,Y+5
 590 0290 5E81      		ldd r21,Y+6
 591 0292 6F81      		ldd r22,Y+7
 592 0294 7885      		ldd r23,Y+8
 593 0296 8985      		ldd r24,Y+9
 594 0298 9A85      		ldd r25,Y+10
 595 029a AB85      		ldd r26,Y+11
 596 029c BC85      		ldd r27,Y+12
 597 029e 4817      		cp r20,r24
 598 02a0 5907      		cpc r21,r25
 599 02a2 6A07      		cpc r22,r26
 600 02a4 7B07      		cpc r23,r27
 601 02a6 01F0      		breq .L19
 602               	.L18:
 148:../freeRTOS750/lib_inet/ping.c **** 					{
 149:../freeRTOS750/lib_inet/ping.c **** 						xSerialPrint_P(PSTR(": Unmatched ID / SeqNum from peer"));			// fail to verify
 604               	.LM50:
 605 02a8 80E0      		ldi r24,lo8(__c.2762)
 606 02aa 90E0      		ldi r25,hi8(__c.2762)
 607 02ac 0E94 0000 		call xSerialPrint_P
 150:../freeRTOS750/lib_inet/ping.c **** 						(*log).UnknownMSG++;
 609               	.LM51:
 610 02b0 F101      		movw r30,r2
 611 02b2 8681      		ldd r24,Z+6
 612 02b4 9781      		ldd r25,Z+7
 613 02b6 0196      		adiw r24,1
 614 02b8 9783      		std Z+7,r25
 615 02ba 8683      		std Z+6,r24
 616 02bc 00C0      		rjmp .L16
 617               	.L19:
 151:../freeRTOS750/lib_inet/ping.c **** 					}
 152:../freeRTOS750/lib_inet/ping.c **** 					else                                                    // success
 153:../freeRTOS750/lib_inet/ping.c **** 					{
 154:../freeRTOS750/lib_inet/ping.c **** 						IsReceived = 1;
 155:../freeRTOS750/lib_inet/ping.c **** 						xSerialPrintf_P(PSTR(": bytes=%d, time<=%dms"),len-8,(xTaskGetTickCount()-xInitialTick)*portT
 619               	.LM52:
 620 02be 0E94 0000 		call xTaskGetTickCount
 621 02c2 8819      		sub r24,r8
 622 02c4 9909      		sbc r25,r9
 623 02c6 48EE      		ldi r20,lo8(-24)
 624 02c8 53E0      		ldi r21,lo8(3)
 625 02ca 849F      		mul r24,r20
 626 02cc 9001      		movw r18,r0
 627 02ce 859F      		mul r24,r21
 628 02d0 300D      		add r19,r0
 629 02d2 949F      		mul r25,r20
 630 02d4 300D      		add r19,r0
 631 02d6 1124      		clr r1
 632 02d8 3F93      		push r19
 633 02da 2F93      		push r18
 634 02dc 0850      		subi r16,8
 635 02de 1109      		sbc r17,__zero_reg__
 636 02e0 1F93      		push r17
 637 02e2 0F93      		push r16
 638 02e4 80E0      		ldi r24,lo8(__c.2764)
 639 02e6 90E0      		ldi r25,hi8(__c.2764)
 640 02e8 9F93      		push r25
 641 02ea 8F93      		push r24
 642 02ec 0E94 0000 		call xSerialPrintf_P
 156:../freeRTOS750/lib_inet/ping.c **** 						(*log).PingReply++;
 644               	.LM53:
 645 02f0 F101      		movw r30,r2
 646 02f2 8485      		ldd r24,Z+12
 647 02f4 9585      		ldd r25,Z+13
 648 02f6 0196      		adiw r24,1
 649 02f8 9587      		std Z+13,r25
 650 02fa 8487      		std Z+12,r24
 651 02fc 0F90      		pop __tmp_reg__
 652 02fe 0F90      		pop __tmp_reg__
 653 0300 0F90      		pop __tmp_reg__
 654 0302 0F90      		pop __tmp_reg__
 655 0304 0F90      		pop __tmp_reg__
 656 0306 0F90      		pop __tmp_reg__
 657 0308 00C0      		rjmp .L43
 658               	.L17:
 157:../freeRTOS750/lib_inet/ping.c **** 					}
 158:../freeRTOS750/lib_inet/ping.c **** 				}
 159:../freeRTOS750/lib_inet/ping.c **** 				else if( pPingReply->type == 3)  					// If the packet is unreachable message
 660               	.LM54:
 661 030a 8330      		cpi r24,lo8(3)
 662 030c 01F4      		brne .L20
 160:../freeRTOS750/lib_inet/ping.c **** 				{
 161:../freeRTOS750/lib_inet/ping.c **** 					IsReceived = 1;
 162:../freeRTOS750/lib_inet/ping.c **** 					xSerialPrint_P(PSTR(": Destination unreachable"));
 664               	.LM55:
 665 030e 80E0      		ldi r24,lo8(__c.2766)
 666 0310 90E0      		ldi r25,hi8(__c.2766)
 667 0312 0E94 0000 		call xSerialPrint_P
 163:../freeRTOS750/lib_inet/ping.c **** 					(*log).UnreachableMSG++;
 669               	.LM56:
 670 0316 F101      		movw r30,r2
 671 0318 8281      		ldd r24,Z+2
 672 031a 9381      		ldd r25,Z+3
 673 031c 0196      		adiw r24,1
 674 031e 9383      		std Z+3,r25
 675 0320 8283      		std Z+2,r24
 676 0322 00C0      		rjmp .L43
 677               	.L20:
 164:../freeRTOS750/lib_inet/ping.c **** 				}
 165:../freeRTOS750/lib_inet/ping.c **** 				else if( pPingReply->type == 11)                 	// If the packet is time exceeded message
 679               	.LM57:
 680 0324 8B30      		cpi r24,lo8(11)
 681 0326 01F4      		brne .L21
 166:../freeRTOS750/lib_inet/ping.c **** 				{
 167:../freeRTOS750/lib_inet/ping.c **** 				        IsReceived = 1;
 168:../freeRTOS750/lib_inet/ping.c **** 				        xSerialPrint_P(PSTR(": TTL expired in transit"));
 683               	.LM58:
 684 0328 80E0      		ldi r24,lo8(__c.2768)
 685 032a 90E0      		ldi r25,hi8(__c.2768)
 686 032c 0E94 0000 		call xSerialPrint_P
 169:../freeRTOS750/lib_inet/ping.c **** 					(*log).TimeExceedMSG++;
 688               	.LM59:
 689 0330 F101      		movw r30,r2
 690 0332 8481      		ldd r24,Z+4
 691 0334 9581      		ldd r25,Z+5
 692 0336 0196      		adiw r24,1
 693 0338 9583      		std Z+5,r25
 694 033a 8483      		std Z+4,r24
 695               	.L43:
 167:../freeRTOS750/lib_inet/ping.c **** 				        IsReceived = 1;
 697               	.LM60:
 698 033c CC24      		clr r12
 699 033e C394      		inc r12
 700 0340 00C0      		rjmp .L16
 701               	.L21:
 170:../freeRTOS750/lib_inet/ping.c **** 				}
 171:../freeRTOS750/lib_inet/ping.c **** 				else if( pPingReply->type == 8)					// Send ping reply to a peer
 703               	.LM61:
 704 0342 8830      		cpi r24,lo8(8)
 705 0344 01F0      		breq .+2
 706 0346 00C0      		rjmp .L22
 172:../freeRTOS750/lib_inet/ping.c **** 				{
 173:../freeRTOS750/lib_inet/ping.c **** 					xSerialPrint_P(PSTR(": Ping Request message"));
 708               	.LM62:
 709 0348 80E0      		ldi r24,lo8(__c.2770)
 710 034a 90E0      		ldi r25,hi8(__c.2770)
 711 034c 0E94 0000 		call xSerialPrint_P
 712 0350 8D81      		ldd r24,Y+5
 713 0352 9E81      		ldd r25,Y+6
 714 0354 AF81      		ldd r26,Y+7
 715 0356 B885      		ldd r27,Y+8
 716 0358 8983      		std Y+1,r24
 717 035a 9A83      		std Y+2,r25
 718 035c AB83      		std Y+3,r26
 719 035e BC83      		std Y+4,r27
 720               	.LBB18:
 721               	.LBB19:
 174:../freeRTOS750/lib_inet/ping.c **** 					SendPingReply(pPingReply,tempip);
 175:../freeRTOS750/lib_inet/ping.c **** 				}
 176:../freeRTOS750/lib_inet/ping.c **** 				else                                                            // if the packet is unknown mes
 177:../freeRTOS750/lib_inet/ping.c **** 				{
 178:../freeRTOS750/lib_inet/ping.c **** 					xSerialPrintf_P(PSTR(": Unknown message (type = 0x%02X)"), pPingReply->type);
 179:../freeRTOS750/lib_inet/ping.c **** 					(*log).UnknownMSG++;
 180:../freeRTOS750/lib_inet/ping.c **** 				}
 181:../freeRTOS750/lib_inet/ping.c **** 			}
 182:../freeRTOS750/lib_inet/ping.c **** 			else if(getSn_SR(s)==SOCK_CLOSED) 				// if it is occurred to fail to send arp packet
 183:../freeRTOS750/lib_inet/ping.c **** 			{
 184:../freeRTOS750/lib_inet/ping.c **** 				(*log).ARPErr++;
 185:../freeRTOS750/lib_inet/ping.c **** 				close(s);									// close the pinging socket
 186:../freeRTOS750/lib_inet/ping.c **** 
 187:../freeRTOS750/lib_inet/ping.c **** 				setSn_PROTO( s, IP_PROTO_ICMP);             // reopen the pinging socket
 188:../freeRTOS750/lib_inet/ping.c **** 				if(socket( s, Sn_MR_IPRAW, 3000, 0) == 0 )
 189:../freeRTOS750/lib_inet/ping.c **** 					{
 190:../freeRTOS750/lib_inet/ping.c **** 					vPortFree(pPingRequest);
 191:../freeRTOS750/lib_inet/ping.c **** 					vPortFree(pPingReply);
 192:../freeRTOS750/lib_inet/ping.c **** 					return 0;
 193:../freeRTOS750/lib_inet/ping.c **** 					}
 194:../freeRTOS750/lib_inet/ping.c **** 				break;
 195:../freeRTOS750/lib_inet/ping.c **** 			}
 196:../freeRTOS750/lib_inet/ping.c **** 			if((xTaskGetTickCount() >= (xInitialTick + ( time / portTICK_RATE_MS ))) && (IsReceived == 0))		
 197:../freeRTOS750/lib_inet/ping.c **** 			{
 198:../freeRTOS750/lib_inet/ping.c **** 				(*log).Loss++;
 199:../freeRTOS750/lib_inet/ping.c **** 				xSerialPrint_P(PSTR("Request timed out\r\n"));
 200:../freeRTOS750/lib_inet/ping.c **** 			}
 201:../freeRTOS750/lib_inet/ping.c **** 
 202:../freeRTOS750/lib_inet/ping.c **** 		}
 203:../freeRTOS750/lib_inet/ping.c **** 	}
 204:../freeRTOS750/lib_inet/ping.c **** 
 205:../freeRTOS750/lib_inet/ping.c **** 	/* Release pinging socket */
 206:../freeRTOS750/lib_inet/ping.c **** 	setSn_PROTO(s,0);
 207:../freeRTOS750/lib_inet/ping.c **** 	close(s);
 208:../freeRTOS750/lib_inet/ping.c **** 	vPortFree(pPingRequest);
 209:../freeRTOS750/lib_inet/ping.c **** 	vPortFree(pPingReply);
 210:../freeRTOS750/lib_inet/ping.c **** 	return 1;
 211:../freeRTOS750/lib_inet/ping.c **** }
 212:../freeRTOS750/lib_inet/ping.c **** 
 213:../freeRTOS750/lib_inet/ping.c **** 
 214:../freeRTOS750/lib_inet/ping.c **** /**
 215:../freeRTOS750/lib_inet/ping.c ****  @brief 	Display result of ping
 216:../freeRTOS750/lib_inet/ping.c ****  */
 217:../freeRTOS750/lib_inet/ping.c **** void DisplayPingStatistics(
 218:../freeRTOS750/lib_inet/ping.c **** 	PING_LOG log		/**< result of ping */
 219:../freeRTOS750/lib_inet/ping.c **** 	)
 220:../freeRTOS750/lib_inet/ping.c **** {
 221:../freeRTOS750/lib_inet/ping.c **** 	xSerialPrintf_P(PSTR("\r\n    Packets: Sent = %d, Received = %d, Lost = %d\r\n"),
 222:../freeRTOS750/lib_inet/ping.c ****     		log.PingRequest,log.PingReply+log.CheckSumErr+log.UnknownMSG+log.UnreachableMSG+log.TimeExcee
 223:../freeRTOS750/lib_inet/ping.c **** 	if(log.CheckSumErr > 0)
 224:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Checksum Error packets = %d\r\n"),log.CheckSumErr);
 225:../freeRTOS750/lib_inet/ping.c **** 	if(log.UnreachableMSG > 0)
 226:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Unreachable Message packets = %d\r\n"),log.UnreachableMSG);
 227:../freeRTOS750/lib_inet/ping.c **** 	if(log.TimeExceedMSG > 0)
 228:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Time Exceeded Message packets = %d\r\n"),log.TimeExceedMSG);
 229:../freeRTOS750/lib_inet/ping.c **** 	if(log.UnknownMSG > 0)
 230:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Unknown Message packets = %d\r\n"),log.UnknownMSG);
 231:../freeRTOS750/lib_inet/ping.c **** 	if(log.ARPErr > 0)
 232:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Fail To Send ARP packets = %d\r\n"),log.ARPErr);
 233:../freeRTOS750/lib_inet/ping.c **** 	if(log.Loss > 0)
 234:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Request timed out = %d\r\n"),log.Loss);
 235:../freeRTOS750/lib_inet/ping.c **** 	if(log.PingReply > 0)
 236:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Ping Reply packets = %d\r\n"),log.PingReply);
 237:../freeRTOS750/lib_inet/ping.c **** }
 238:../freeRTOS750/lib_inet/ping.c **** 
 239:../freeRTOS750/lib_inet/ping.c **** /**
 240:../freeRTOS750/lib_inet/ping.c ****  @brief 	Send ping reply packet to the specified peer
 241:../freeRTOS750/lib_inet/ping.c **** 
 242:../freeRTOS750/lib_inet/ping.c ****  If Error is occurred in sending ping reply packet, then ignored\n
 243:../freeRTOS750/lib_inet/ping.c ****  Because it is not need to send ping reply packet to the specified peer every time.
 244:../freeRTOS750/lib_inet/ping.c **** 
 245:../freeRTOS750/lib_inet/ping.c ****  */
 246:../freeRTOS750/lib_inet/ping.c **** static void SendPingReply(
 247:../freeRTOS750/lib_inet/ping.c **** 	PING_MSG *pingrequest,	/**< received ping reply packet from the specified peer */
 248:../freeRTOS750/lib_inet/ping.c **** 	uint32_t destaddr		/**< 32bit peer ip address (network ordering) */
 249:../freeRTOS750/lib_inet/ping.c **** 	)
 250:../freeRTOS750/lib_inet/ping.c **** {
 251:../freeRTOS750/lib_inet/ping.c **** 	SOCKET PingReplySocket;
 252:../freeRTOS750/lib_inet/ping.c **** 
 253:../freeRTOS750/lib_inet/ping.c **** 	PingReplySocket = getSocket(SOCK_CLOSED,0);	// Find free socket number
 723               	.LM63:
 724 0360 60E0      		ldi r22,0
 725 0362 80E0      		ldi r24,0
 726 0364 0E94 0000 		call getSocket
 727 0368 A82E      		mov r10,r24
 254:../freeRTOS750/lib_inet/ping.c **** 	if(PingReplySocket != MAX_SOCK_NUM )        // Is there a free socket?
 729               	.LM64:
 730 036a F4E0      		ldi r31,lo8(4)
 731 036c 8F17      		cp r24,r31
 732 036e 01F4      		brne .+2
 733 0370 00C0      		rjmp .L23
 255:../freeRTOS750/lib_inet/ping.c **** 	{
 256:../freeRTOS750/lib_inet/ping.c **** 		setSn_PROTO( PingReplySocket, IP_PROTO_ICMP); 	    		// Set upper protocol of IP_RAW mode
 735               	.LM65:
 736 0372 61E0      		ldi r22,lo8(1)
 737 0374 0E94 0000 		call setSn_PROTO
 257:../freeRTOS750/lib_inet/ping.c **** 		if( socket( PingReplySocket, Sn_MR_IPRAW, 3001, 0) != 0)	// Open ICMP socket
 739               	.LM66:
 740 0378 20E0      		ldi r18,0
 741 037a 49EB      		ldi r20,lo8(-71)
 742 037c 5BE0      		ldi r21,lo8(11)
 743 037e 63E0      		ldi r22,lo8(3)
 744 0380 8A2D      		mov r24,r10
 745 0382 0E94 0000 		call socket
 746 0386 8823      		tst r24
 747 0388 01F0      		breq .L24
 258:../freeRTOS750/lib_inet/ping.c **** 		{
 259:../freeRTOS750/lib_inet/ping.c **** 			(*pingrequest).type = 0;				// Ping-Reply
 749               	.LM67:
 750 038a F201      		movw r30,r4
 751 038c 1082      		st Z,__zero_reg__
 260:../freeRTOS750/lib_inet/ping.c **** 			(*pingrequest).code = 0;                // Always 0
 753               	.LM68:
 754 038e 1182      		std Z+1,__zero_reg__
 261:../freeRTOS750/lib_inet/ping.c ****   			(*pingrequest).checksum = 0;
 756               	.LM69:
 757 0390 1382      		std Z+3,__zero_reg__
 758 0392 1282      		std Z+2,__zero_reg__
 262:../freeRTOS750/lib_inet/ping.c **** 			(*pingrequest).checksum = htons( checksum((uint8_t*)pingrequest, sizeof(PING_MSG)));	// Calculat
 760               	.LM70:
 761 0394 60E4      		ldi r22,lo8(64)
 762 0396 70E0      		ldi r23,0
 763 0398 C201      		movw r24,r4
 764 039a 0E94 0000 		call checksum
 765 039e 0E94 0000 		call htons
 766 03a2 F201      		movw r30,r4
 767 03a4 9383      		std Z+3,r25
 768 03a6 8283      		std Z+2,r24
 263:../freeRTOS750/lib_inet/ping.c **** 
 264:../freeRTOS750/lib_inet/ping.c **** 			if(sendto( PingReplySocket, (uint8_t *)pingrequest, sizeof(PING_MSG), (uint8_t*)&destaddr, 3001)
 770               	.LM71:
 771 03a8 09EB      		ldi r16,lo8(-71)
 772 03aa 1BE0      		ldi r17,lo8(11)
 773 03ac 9E01      		movw r18,r28
 774 03ae 2F5F      		subi r18,-1
 775 03b0 3F4F      		sbci r19,-1
 776 03b2 40E4      		ldi r20,lo8(64)
 777 03b4 50E0      		ldi r21,0
 778 03b6 B201      		movw r22,r4
 779 03b8 8A2D      		mov r24,r10
 780 03ba 0E94 0000 		call sendto
 781 03be 892B      		or r24,r25
 782 03c0 01F4      		brne .L25
 265:../freeRTOS750/lib_inet/ping.c **** 				xSerialPrintf_P(PSTR("Fail to send ping-reply packet to %s. Send failure"),inet_ntoa(ntohl(dest
 784               	.LM72:
 785 03c2 6981      		ldd r22,Y+1
 786 03c4 7A81      		ldd r23,Y+2
 787 03c6 8B81      		ldd r24,Y+3
 788 03c8 9C81      		ldd r25,Y+4
 789 03ca 0E94 0000 		call ntohl
 790 03ce 0E94 0000 		call inet_ntoa
 791 03d2 9F93      		push r25
 792 03d4 8F93      		push r24
 793 03d6 20E0      		ldi r18,lo8(__c.2805)
 794 03d8 30E0      		ldi r19,hi8(__c.2805)
 795 03da 3F93      		push r19
 796 03dc 2F93      		push r18
 797 03de 0E94 0000 		call xSerialPrintf_P
 798 03e2 0F90      		pop __tmp_reg__
 799 03e4 0F90      		pop __tmp_reg__
 800 03e6 0F90      		pop __tmp_reg__
 801 03e8 0F90      		pop __tmp_reg__
 802               	.L25:
 266:../freeRTOS750/lib_inet/ping.c **** 
 267:../freeRTOS750/lib_inet/ping.c **** 			close(PingReplySocket);				// Close ICMP socket
 804               	.LM73:
 805 03ea 8A2D      		mov r24,r10
 806 03ec 0E94 0000 		call close
 807               	.L24:
 268:../freeRTOS750/lib_inet/ping.c **** 		}
 269:../freeRTOS750/lib_inet/ping.c **** 
 270:../freeRTOS750/lib_inet/ping.c **** 		setSn_PROTO(PingReplySocket,0);		// Clear IP protocol register.
 809               	.LM74:
 810 03f0 60E0      		ldi r22,0
 811 03f2 8A2D      		mov r24,r10
 812 03f4 0E94 0000 		call setSn_PROTO
 813 03f8 00C0      		rjmp .L16
 814               	.L23:
 271:../freeRTOS750/lib_inet/ping.c **** 	}
 272:../freeRTOS750/lib_inet/ping.c **** 	else	xSerialPrintf_P(PSTR("Fail to send ping-reply packet to %s. NO FREE SOCKET"),inet_ntoa(ntohl(
 816               	.LM75:
 817 03fa 6981      		ldd r22,Y+1
 818 03fc 7A81      		ldd r23,Y+2
 819 03fe 8B81      		ldd r24,Y+3
 820 0400 9C81      		ldd r25,Y+4
 821 0402 0E94 0000 		call ntohl
 822 0406 0E94 0000 		call inet_ntoa
 823 040a 9F93      		push r25
 824 040c 8F93      		push r24
 825 040e 80E0      		ldi r24,lo8(__c.2807)
 826 0410 90E0      		ldi r25,hi8(__c.2807)
 827 0412 9F93      		push r25
 828 0414 8F93      		push r24
 829 0416 0E94 0000 		call xSerialPrintf_P
 830 041a 00C0      		rjmp .L42
 831               	.L22:
 832               	.LBE19:
 833               	.LBE18:
 178:../freeRTOS750/lib_inet/ping.c **** 					xSerialPrintf_P(PSTR(": Unknown message (type = 0x%02X)"), pPingReply->type);
 835               	.LM76:
 836 041c 1F92      		push __zero_reg__
 837 041e 8F93      		push r24
 838 0420 20E0      		ldi r18,lo8(__c.2772)
 839 0422 30E0      		ldi r19,hi8(__c.2772)
 840 0424 3F93      		push r19
 841 0426 2F93      		push r18
 842 0428 0E94 0000 		call xSerialPrintf_P
 179:../freeRTOS750/lib_inet/ping.c **** 					(*log).UnknownMSG++;
 844               	.LM77:
 845 042c F101      		movw r30,r2
 846 042e 8681      		ldd r24,Z+6
 847 0430 9781      		ldd r25,Z+7
 848 0432 0196      		adiw r24,1
 849 0434 9783      		std Z+7,r25
 850 0436 8683      		std Z+6,r24
 851               	.L42:
 852 0438 0F90      		pop __tmp_reg__
 853 043a 0F90      		pop __tmp_reg__
 854 043c 0F90      		pop __tmp_reg__
 855 043e 0F90      		pop __tmp_reg__
 856 0440 00C0      		rjmp .L16
 857               	.L13:
 182:../freeRTOS750/lib_inet/ping.c **** 			else if(getSn_SR(s)==SOCK_CLOSED) 				// if it is occurred to fail to send arp packet
 859               	.LM78:
 860 0442 8D2D      		mov r24,r13
 861 0444 0E94 0000 		call getSn_SR
 862 0448 8111      		cpse r24,__zero_reg__
 863 044a 00C0      		rjmp .L16
 864 044c 00C0      		rjmp .L10
 865               	.L45:
 190:../freeRTOS750/lib_inet/ping.c **** 					vPortFree(pPingRequest);
 867               	.LM79:
 868 044e C701      		movw r24,r14
 869 0450 0E94 0000 		call vPortFree
 191:../freeRTOS750/lib_inet/ping.c **** 					vPortFree(pPingReply);
 871               	.LM80:
 872 0454 C201      		movw r24,r4
 873               	.L44:
 874 0456 0E94 0000 		call vPortFree
 875 045a 00C0      		rjmp .L30
 876               	.L16:
 196:../freeRTOS750/lib_inet/ping.c **** 			if((xTaskGetTickCount() >= (xInitialTick + ( time / portTICK_RATE_MS ))) && (IsReceived == 0))		
 878               	.LM81:
 879 045c 0E94 0000 		call xTaskGetTickCount
 880 0460 8615      		cp r24,r6
 881 0462 9705      		cpc r25,r7
 882 0464 00F0      		brlo .L41
 196:../freeRTOS750/lib_inet/ping.c **** 			if((xTaskGetTickCount() >= (xInitialTick + ( time / portTICK_RATE_MS ))) && (IsReceived == 0))		
 884               	.LM82:
 885 0466 C110      		cpse r12,__zero_reg__
 886 0468 00C0      		rjmp .L34
 198:../freeRTOS750/lib_inet/ping.c **** 				(*log).Loss++;
 888               	.LM83:
 889 046a F101      		movw r30,r2
 890 046c 8685      		ldd r24,Z+14
 891 046e 9785      		ldd r25,Z+15
 892 0470 0196      		adiw r24,1
 893 0472 9787      		std Z+15,r25
 894 0474 8687      		std Z+14,r24
 199:../freeRTOS750/lib_inet/ping.c **** 				xSerialPrint_P(PSTR("Request timed out\r\n"));
 896               	.LM84:
 897 0476 80E0      		ldi r24,lo8(__c.2775)
 898 0478 90E0      		ldi r25,hi8(__c.2775)
 899 047a 0E94 0000 		call xSerialPrint_P
 900 047e 00C0      		rjmp .L41
 901               	.L34:
 196:../freeRTOS750/lib_inet/ping.c **** 			if((xTaskGetTickCount() >= (xInitialTick + ( time / portTICK_RATE_MS ))) && (IsReceived == 0))		
 903               	.LM85:
 904 0480 CC24      		clr r12
 905 0482 C394      		inc r12
 906               	.L41:
 129:../freeRTOS750/lib_inet/ping.c **** 		while( xTaskGetTickCount() < (xInitialTick + ( time / portTICK_RATE_MS )) )	// as long as time is
 908               	.LM86:
 909 0484 0E94 0000 		call xTaskGetTickCount
 910 0488 8615      		cp r24,r6
 911 048a 9705      		cpc r25,r7
 912 048c 00F4      		brsh .+2
 913 048e 00C0      		rjmp .L28
 914 0490 00C0      		rjmp .L26
 915               	.L9:
 102:../freeRTOS750/lib_inet/ping.c **** 	while( count-- != 0)
 917               	.LM87:
 918 0492 B812      		cpse r11,r24
 919 0494 00C0      		rjmp .L29
 206:../freeRTOS750/lib_inet/ping.c **** 	setSn_PROTO(s,0);
 921               	.LM88:
 922 0496 60E0      		ldi r22,0
 923 0498 8D2D      		mov r24,r13
 924 049a 0E94 0000 		call setSn_PROTO
 207:../freeRTOS750/lib_inet/ping.c **** 	close(s);
 926               	.LM89:
 927 049e 8D2D      		mov r24,r13
 928 04a0 0E94 0000 		call close
 208:../freeRTOS750/lib_inet/ping.c **** 	vPortFree(pPingRequest);
 930               	.LM90:
 931 04a4 C701      		movw r24,r14
 932 04a6 0E94 0000 		call vPortFree
 209:../freeRTOS750/lib_inet/ping.c **** 	vPortFree(pPingReply);
 934               	.LM91:
 935 04aa C201      		movw r24,r4
 936 04ac 0E94 0000 		call vPortFree
 210:../freeRTOS750/lib_inet/ping.c **** 	return 1;
 938               	.LM92:
 939 04b0 81E0      		ldi r24,lo8(1)
 940 04b2 00C0      		rjmp .L2
 941               	.L30:
  55:../freeRTOS750/lib_inet/ping.c **** 		return 0;
 943               	.LM93:
 944 04b4 80E0      		ldi r24,0
 945               	.L2:
 946               	/* epilogue start */
 211:../freeRTOS750/lib_inet/ping.c **** }
 948               	.LM94:
 949 04b6 6296      		adiw r28,18
 950 04b8 0FB6      		in __tmp_reg__,__SREG__
 951 04ba F894      		cli
 952 04bc DEBF      		out __SP_H__,r29
 953 04be 0FBE      		out __SREG__,__tmp_reg__
 954 04c0 CDBF      		out __SP_L__,r28
 955 04c2 DF91      		pop r29
 956 04c4 CF91      		pop r28
 957 04c6 1F91      		pop r17
 958 04c8 0F91      		pop r16
 959 04ca FF90      		pop r15
 960 04cc EF90      		pop r14
 961 04ce DF90      		pop r13
 962 04d0 CF90      		pop r12
 963 04d2 BF90      		pop r11
 964 04d4 AF90      		pop r10
 965 04d6 9F90      		pop r9
 966 04d8 8F90      		pop r8
 967 04da 7F90      		pop r7
 968 04dc 6F90      		pop r6
 969 04de 5F90      		pop r5
 970 04e0 4F90      		pop r4
 971 04e2 3F90      		pop r3
 972 04e4 2F90      		pop r2
 973 04e6 0895      		ret
 994               	.Lscope1:
 996               		.stabd	78,0,0
 999               	.global	DisplayPingStatistics
 1001               	DisplayPingStatistics:
 1002               		.stabd	46,0,0
 220:../freeRTOS750/lib_inet/ping.c **** {
 1004               	.LM95:
 1005               	.LFBB2:
 1006 04e8 4F92      		push r4
 1007 04ea 5F92      		push r5
 1008 04ec 6F92      		push r6
 1009 04ee 7F92      		push r7
 1010 04f0 8F92      		push r8
 1011 04f2 9F92      		push r9
 1012 04f4 AF92      		push r10
 1013 04f6 BF92      		push r11
 1014 04f8 CF92      		push r12
 1015 04fa DF92      		push r13
 1016 04fc EF92      		push r14
 1017 04fe FF92      		push r15
 1018 0500 0F93      		push r16
 1019 0502 1F93      		push r17
 1020 0504 CF93      		push r28
 1021 0506 DF93      		push r29
 1022 0508 CDB7      		in r28,__SP_L__
 1023 050a DEB7      		in r29,__SP_H__
 1024 050c 6097      		sbiw r28,16
 1025 050e 0FB6      		in __tmp_reg__,__SREG__
 1026 0510 F894      		cli
 1027 0512 DEBF      		out __SP_H__,r29
 1028 0514 0FBE      		out __SREG__,__tmp_reg__
 1029 0516 CDBF      		out __SP_L__,r28
 1030               	/* prologue: function */
 1031               	/* frame size = 16 */
 1032               	/* stack size = 32 */
 1033               	.L__stack_usage = 32
 1034 0518 A982      		std Y+1,r10
 1035 051a BA82      		std Y+2,r11
 1036 051c CB82      		std Y+3,r12
 1037 051e DC82      		std Y+4,r13
 1038 0520 ED82      		std Y+5,r14
 1039 0522 FE82      		std Y+6,r15
 1040 0524 0F83      		std Y+7,r16
 1041 0526 1887      		std Y+8,r17
 1042 0528 2987      		std Y+9,r18
 1043 052a 3A87      		std Y+10,r19
 1044 052c 4B87      		std Y+11,r20
 1045 052e 5C87      		std Y+12,r21
 1046 0530 6D87      		std Y+13,r22
 1047 0532 7E87      		std Y+14,r23
 1048 0534 8F87      		std Y+15,r24
 1049 0536 988B      		std Y+16,r25
 1050 0538 4980      		ldd r4,Y+1
 1051 053a 5A80      		ldd r5,Y+2
 1052 053c 6B80      		ldd r6,Y+3
 1053 053e 7C80      		ldd r7,Y+4
 1054 0540 8D80      		ldd r8,Y+5
 1055 0542 9E80      		ldd r9,Y+6
 1056 0544 AF80      		ldd r10,Y+7
 1057 0546 B884      		ldd r11,Y+8
 1058 0548 C984      		ldd r12,Y+9
 1059 054a DA84      		ldd r13,Y+10
 1060 054c 0D85      		ldd r16,Y+13
 1061 054e 1E85      		ldd r17,Y+14
 1062 0550 EF84      		ldd r14,Y+15
 1063 0552 F888      		ldd r15,Y+16
 221:../freeRTOS750/lib_inet/ping.c **** 	xSerialPrintf_P(PSTR("\r\n    Packets: Sent = %d, Received = %d, Lost = %d\r\n"),
 1065               	.LM96:
 1066 0554 C601      		movw r24,r12
 1067 0556 8E0D      		add r24,r14
 1068 0558 9F1D      		adc r25,r15
 1069 055a 9F93      		push r25
 1070 055c 8F93      		push r24
 222:../freeRTOS750/lib_inet/ping.c ****     		log.PingRequest,log.PingReply+log.CheckSumErr+log.UnknownMSG+log.UnreachableMSG+log.TimeExcee
 1072               	.LM97:
 1073 055e C501      		movw r24,r10
 1074 0560 800F      		add r24,r16
 1075 0562 911F      		adc r25,r17
 1076 0564 880D      		add r24,r8
 1077 0566 991D      		adc r25,r9
 1078 0568 860D      		add r24,r6
 1079 056a 971D      		adc r25,r7
 221:../freeRTOS750/lib_inet/ping.c **** 	xSerialPrintf_P(PSTR("\r\n    Packets: Sent = %d, Received = %d, Lost = %d\r\n"),
 1081               	.LM98:
 1082 056c 840D      		add r24,r4
 1083 056e 951D      		adc r25,r5
 1084 0570 9F93      		push r25
 1085 0572 8F93      		push r24
 1086 0574 8C85      		ldd r24,Y+12
 1087 0576 8F93      		push r24
 1088 0578 8B85      		ldd r24,Y+11
 1089 057a 8F93      		push r24
 1090 057c 80E0      		ldi r24,lo8(__c.2784)
 1091 057e 90E0      		ldi r25,hi8(__c.2784)
 1092 0580 9F93      		push r25
 1093 0582 8F93      		push r24
 1094 0584 0E94 0000 		call xSerialPrintf_P
 223:../freeRTOS750/lib_inet/ping.c **** 	if(log.CheckSumErr > 0)
 1096               	.LM99:
 1097 0588 0FB6      		in __tmp_reg__,__SREG__
 1098 058a F894      		cli
 1099 058c DEBF      		out __SP_H__,r29
 1100 058e 0FBE      		out __SREG__,__tmp_reg__
 1101 0590 CDBF      		out __SP_L__,r28
 1102 0592 4114      		cp r4,__zero_reg__
 1103 0594 5104      		cpc r5,__zero_reg__
 1104 0596 01F0      		breq .L47
 224:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Checksum Error packets = %d\r\n"),log.CheckSumErr);
 1106               	.LM100:
 1107 0598 5F92      		push r5
 1108 059a 4F92      		push r4
 1109 059c 80E0      		ldi r24,lo8(__c.2786)
 1110 059e 90E0      		ldi r25,hi8(__c.2786)
 1111 05a0 9F93      		push r25
 1112 05a2 8F93      		push r24
 1113 05a4 0E94 0000 		call xSerialPrintf_P
 1114 05a8 0F90      		pop __tmp_reg__
 1115 05aa 0F90      		pop __tmp_reg__
 1116 05ac 0F90      		pop __tmp_reg__
 1117 05ae 0F90      		pop __tmp_reg__
 1118               	.L47:
 225:../freeRTOS750/lib_inet/ping.c **** 	if(log.UnreachableMSG > 0)
 1120               	.LM101:
 1121 05b0 6114      		cp r6,__zero_reg__
 1122 05b2 7104      		cpc r7,__zero_reg__
 1123 05b4 01F0      		breq .L48
 226:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Unreachable Message packets = %d\r\n"),log.UnreachableMSG);
 1125               	.LM102:
 1126 05b6 7F92      		push r7
 1127 05b8 6F92      		push r6
 1128 05ba 80E0      		ldi r24,lo8(__c.2788)
 1129 05bc 90E0      		ldi r25,hi8(__c.2788)
 1130 05be 9F93      		push r25
 1131 05c0 8F93      		push r24
 1132 05c2 0E94 0000 		call xSerialPrintf_P
 1133 05c6 0F90      		pop __tmp_reg__
 1134 05c8 0F90      		pop __tmp_reg__
 1135 05ca 0F90      		pop __tmp_reg__
 1136 05cc 0F90      		pop __tmp_reg__
 1137               	.L48:
 227:../freeRTOS750/lib_inet/ping.c **** 	if(log.TimeExceedMSG > 0)
 1139               	.LM103:
 1140 05ce 8114      		cp r8,__zero_reg__
 1141 05d0 9104      		cpc r9,__zero_reg__
 1142 05d2 01F0      		breq .L49
 228:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Time Exceeded Message packets = %d\r\n"),log.TimeExceedMSG);
 1144               	.LM104:
 1145 05d4 9F92      		push r9
 1146 05d6 8F92      		push r8
 1147 05d8 80E0      		ldi r24,lo8(__c.2790)
 1148 05da 90E0      		ldi r25,hi8(__c.2790)
 1149 05dc 9F93      		push r25
 1150 05de 8F93      		push r24
 1151 05e0 0E94 0000 		call xSerialPrintf_P
 1152 05e4 0F90      		pop __tmp_reg__
 1153 05e6 0F90      		pop __tmp_reg__
 1154 05e8 0F90      		pop __tmp_reg__
 1155 05ea 0F90      		pop __tmp_reg__
 1156               	.L49:
 229:../freeRTOS750/lib_inet/ping.c **** 	if(log.UnknownMSG > 0)
 1158               	.LM105:
 1159 05ec A114      		cp r10,__zero_reg__
 1160 05ee B104      		cpc r11,__zero_reg__
 1161 05f0 01F0      		breq .L50
 230:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Unknown Message packets = %d\r\n"),log.UnknownMSG);
 1163               	.LM106:
 1164 05f2 BF92      		push r11
 1165 05f4 AF92      		push r10
 1166 05f6 80E0      		ldi r24,lo8(__c.2792)
 1167 05f8 90E0      		ldi r25,hi8(__c.2792)
 1168 05fa 9F93      		push r25
 1169 05fc 8F93      		push r24
 1170 05fe 0E94 0000 		call xSerialPrintf_P
 1171 0602 0F90      		pop __tmp_reg__
 1172 0604 0F90      		pop __tmp_reg__
 1173 0606 0F90      		pop __tmp_reg__
 1174 0608 0F90      		pop __tmp_reg__
 1175               	.L50:
 231:../freeRTOS750/lib_inet/ping.c **** 	if(log.ARPErr > 0)
 1177               	.LM107:
 1178 060a C114      		cp r12,__zero_reg__
 1179 060c D104      		cpc r13,__zero_reg__
 1180 060e 01F0      		breq .L51
 232:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Fail To Send ARP packets = %d\r\n"),log.ARPErr);
 1182               	.LM108:
 1183 0610 DF92      		push r13
 1184 0612 CF92      		push r12
 1185 0614 80E0      		ldi r24,lo8(__c.2794)
 1186 0616 90E0      		ldi r25,hi8(__c.2794)
 1187 0618 9F93      		push r25
 1188 061a 8F93      		push r24
 1189 061c 0E94 0000 		call xSerialPrintf_P
 1190 0620 0F90      		pop __tmp_reg__
 1191 0622 0F90      		pop __tmp_reg__
 1192 0624 0F90      		pop __tmp_reg__
 1193 0626 0F90      		pop __tmp_reg__
 1194               	.L51:
 233:../freeRTOS750/lib_inet/ping.c **** 	if(log.Loss > 0)
 1196               	.LM109:
 1197 0628 E114      		cp r14,__zero_reg__
 1198 062a F104      		cpc r15,__zero_reg__
 1199 062c 01F0      		breq .L52
 234:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Request timed out = %d\r\n"),log.Loss);
 1201               	.LM110:
 1202 062e FF92      		push r15
 1203 0630 EF92      		push r14
 1204 0632 80E0      		ldi r24,lo8(__c.2796)
 1205 0634 90E0      		ldi r25,hi8(__c.2796)
 1206 0636 9F93      		push r25
 1207 0638 8F93      		push r24
 1208 063a 0E94 0000 		call xSerialPrintf_P
 1209 063e 0F90      		pop __tmp_reg__
 1210 0640 0F90      		pop __tmp_reg__
 1211 0642 0F90      		pop __tmp_reg__
 1212 0644 0F90      		pop __tmp_reg__
 1213               	.L52:
 235:../freeRTOS750/lib_inet/ping.c **** 	if(log.PingReply > 0)
 1215               	.LM111:
 1216 0646 0115      		cp r16,__zero_reg__
 1217 0648 1105      		cpc r17,__zero_reg__
 1218 064a 01F0      		breq .L46
 236:../freeRTOS750/lib_inet/ping.c **** 		xSerialPrintf_P(PSTR("    Ping Reply packets = %d\r\n"),log.PingReply);
 1220               	.LM112:
 1221 064c 1F93      		push r17
 1222 064e 0F93      		push r16
 1223 0650 80E0      		ldi r24,lo8(__c.2798)
 1224 0652 90E0      		ldi r25,hi8(__c.2798)
 1225 0654 9F93      		push r25
 1226 0656 8F93      		push r24
 1227 0658 0E94 0000 		call xSerialPrintf_P
 1228 065c 0F90      		pop __tmp_reg__
 1229 065e 0F90      		pop __tmp_reg__
 1230 0660 0F90      		pop __tmp_reg__
 1231 0662 0F90      		pop __tmp_reg__
 1232               	.L46:
 1233               	/* epilogue start */
 237:../freeRTOS750/lib_inet/ping.c **** }
 1235               	.LM113:
 1236 0664 6096      		adiw r28,16
 1237 0666 0FB6      		in __tmp_reg__,__SREG__
 1238 0668 F894      		cli
 1239 066a DEBF      		out __SP_H__,r29
 1240 066c 0FBE      		out __SREG__,__tmp_reg__
 1241 066e CDBF      		out __SP_L__,r28
 1242 0670 DF91      		pop r29
 1243 0672 CF91      		pop r28
 1244 0674 1F91      		pop r17
 1245 0676 0F91      		pop r16
 1246 0678 FF90      		pop r15
 1247 067a EF90      		pop r14
 1248 067c DF90      		pop r13
 1249 067e CF90      		pop r12
 1250 0680 BF90      		pop r11
 1251 0682 AF90      		pop r10
 1252 0684 9F90      		pop r9
 1253 0686 8F90      		pop r8
 1254 0688 7F90      		pop r7
 1255 068a 6F90      		pop r6
 1256 068c 5F90      		pop r5
 1257 068e 4F90      		pop r4
 1258 0690 0895      		ret
 1260               	.Lscope2:
 1262               		.stabd	78,0,0
 1263               		.section	.progmem.data,"a",@progbits
 1266               	__c.2755:
 1267 0000 0D0A 5069 		.string	"\r\nPinging %s with %d bytes of data:\r\n"
 1267      6E67 696E 
 1267      6720 2573 
 1267      2077 6974 
 1267      6820 2564 
 1270               	__c.2758:
 1271 0026 0D0A 5265 		.string	"\r\nReply from %s"
 1271      706C 7920 
 1271      6672 6F6D 
 1271      2025 7300 
 1274               	__c.2760:
 1275 0036 3A20 4368 		.string	": Checksum Error"
 1275      6563 6B73 
 1275      756D 2045 
 1275      7272 6F72 
 1275      00
 1278               	__c.2762:
 1279 0047 3A20 556E 		.string	": Unmatched ID / SeqNum from peer"
 1279      6D61 7463 
 1279      6865 6420 
 1279      4944 202F 
 1279      2053 6571 
 1282               	__c.2764:
 1283 0069 3A20 6279 		.string	": bytes=%d, time<=%dms"
 1283      7465 733D 
 1283      2564 2C20 
 1283      7469 6D65 
 1283      3C3D 2564 
 1286               	__c.2766:
 1287 0080 3A20 4465 		.string	": Destination unreachable"
 1287      7374 696E 
 1287      6174 696F 
 1287      6E20 756E 
 1287      7265 6163 
 1290               	__c.2768:
 1291 009a 3A20 5454 		.string	": TTL expired in transit"
 1291      4C20 6578 
 1291      7069 7265 
 1291      6420 696E 
 1291      2074 7261 
 1294               	__c.2770:
 1295 00b3 3A20 5069 		.string	": Ping Request message"
 1295      6E67 2052 
 1295      6571 7565 
 1295      7374 206D 
 1295      6573 7361 
 1298               	__c.2772:
 1299 00ca 3A20 556E 		.string	": Unknown message (type = 0x%02X)"
 1299      6B6E 6F77 
 1299      6E20 6D65 
 1299      7373 6167 
 1299      6520 2874 
 1302               	__c.2775:
 1303 00ec 5265 7175 		.string	"Request timed out\r\n"
 1303      6573 7420 
 1303      7469 6D65 
 1303      6420 6F75 
 1303      740D 0A00 
 1306               	__c.2805:
 1307 0100 4661 696C 		.string	"Fail to send ping-reply packet to %s. Send failure"
 1307      2074 6F20 
 1307      7365 6E64 
 1307      2070 696E 
 1307      672D 7265 
 1310               	__c.2807:
 1311 0133 4661 696C 		.string	"Fail to send ping-reply packet to %s. NO FREE SOCKET"
 1311      2074 6F20 
 1311      7365 6E64 
 1311      2070 696E 
 1311      672D 7265 
 1314               	__c.2784:
 1315 0168 0D0A 2020 		.string	"\r\n    Packets: Sent = %d, Received = %d, Lost = %d\r\n"
 1315      2020 5061 
 1315      636B 6574 
 1315      733A 2053 
 1315      656E 7420 
 1318               	__c.2786:
 1319 019d 2020 2020 		.string	"    Checksum Error packets = %d\r\n"
 1319      4368 6563 
 1319      6B73 756D 
 1319      2045 7272 
 1319      6F72 2070 
 1322               	__c.2788:
 1323 01bf 2020 2020 		.string	"    Unreachable Message packets = %d\r\n"
 1323      556E 7265 
 1323      6163 6861 
 1323      626C 6520 
 1323      4D65 7373 
 1326               	__c.2790:
 1327 01e6 2020 2020 		.string	"    Time Exceeded Message packets = %d\r\n"
 1327      5469 6D65 
 1327      2045 7863 
 1327      6565 6465 
 1327      6420 4D65 
 1330               	__c.2792:
 1331 020f 2020 2020 		.string	"    Unknown Message packets = %d\r\n"
 1331      556E 6B6E 
 1331      6F77 6E20 
 1331      4D65 7373 
 1331      6167 6520 
 1334               	__c.2794:
 1335 0232 2020 2020 		.string	"    Fail To Send ARP packets = %d\r\n"
 1335      4661 696C 
 1335      2054 6F20 
 1335      5365 6E64 
 1335      2041 5250 
 1338               	__c.2796:
 1339 0256 2020 2020 		.string	"    Request timed out = %d\r\n"
 1339      5265 7175 
 1339      6573 7420 
 1339      7469 6D65 
 1339      6420 6F75 
 1342               	__c.2798:
 1343 0273 2020 2020 		.string	"    Ping Reply packets = %d\r\n"
 1343      5069 6E67 
 1343      2052 6570 
 1343      6C79 2070 
 1343      6163 6B65 
 1344               		.text
 1346               	.Letext0:
 1347               		.ident	"GCC: (GNU) 4.7.2"
DEFINED SYMBOLS
                            *ABS*:00000000 ping.c
     /tmp/ccpP4LBN.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccpP4LBN.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccpP4LBN.s:4      *ABS*:0000003f __SREG__
     /tmp/ccpP4LBN.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccpP4LBN.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccpP4LBN.s:168    .text:00000000 ping
     /tmp/ccpP4LBN.s:1266   .progmem.data:00000000 __c.2755
     /tmp/ccpP4LBN.s:1270   .progmem.data:00000026 __c.2758
     /tmp/ccpP4LBN.s:1274   .progmem.data:00000036 __c.2760
     /tmp/ccpP4LBN.s:1278   .progmem.data:00000047 __c.2762
     /tmp/ccpP4LBN.s:1282   .progmem.data:00000069 __c.2764
     /tmp/ccpP4LBN.s:1286   .progmem.data:00000080 __c.2766
     /tmp/ccpP4LBN.s:1290   .progmem.data:0000009a __c.2768
     /tmp/ccpP4LBN.s:1294   .progmem.data:000000b3 __c.2770
     /tmp/ccpP4LBN.s:1306   .progmem.data:00000100 __c.2805
     /tmp/ccpP4LBN.s:1310   .progmem.data:00000133 __c.2807
     /tmp/ccpP4LBN.s:1298   .progmem.data:000000ca __c.2772
     /tmp/ccpP4LBN.s:1302   .progmem.data:000000ec __c.2775
     /tmp/ccpP4LBN.s:1001   .text:000004e8 DisplayPingStatistics
     /tmp/ccpP4LBN.s:1314   .progmem.data:00000168 __c.2784
     /tmp/ccpP4LBN.s:1318   .progmem.data:0000019d __c.2786
     /tmp/ccpP4LBN.s:1322   .progmem.data:000001bf __c.2788
     /tmp/ccpP4LBN.s:1326   .progmem.data:000001e6 __c.2790
     /tmp/ccpP4LBN.s:1330   .progmem.data:0000020f __c.2792
     /tmp/ccpP4LBN.s:1334   .progmem.data:00000232 __c.2794
     /tmp/ccpP4LBN.s:1338   .progmem.data:00000256 __c.2796
     /tmp/ccpP4LBN.s:1342   .progmem.data:00000273 __c.2798

UNDEFINED SYMBOLS
pvPortMalloc
rand
htons
__udivmodhi4
getSocket
setSn_PROTO
socket
inet_addr
htonl
xSerialPrintf_P
checksum
xTaskGetTickCount
sendto
close
getSn_RX_RSR
recvfrom
ntohl
inet_ntoa
xSerialPrint_P
getSn_SR
vPortFree
