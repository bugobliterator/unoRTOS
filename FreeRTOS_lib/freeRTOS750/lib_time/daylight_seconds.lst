   1               		.file	"daylight_seconds.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  80               	.global	__floatsisf
  81               	.global	__divsf3
  82               	.global	__mulsf3
  83               	.global	__gtsf2
  84               	.global	__ltsf2
  85               	.global	__fixsfsi
  88               	.global	daylight_seconds
  90               	daylight_seconds:
  91               		.stabd	46,0,0
   1:../freeRTOS750/lib_time/daylight_seconds.c **** /*
   2:../freeRTOS750/lib_time/daylight_seconds.c ****  * (C)2012 Michael Duane Rice All rights reserved.
   3:../freeRTOS750/lib_time/daylight_seconds.c ****  *
   4:../freeRTOS750/lib_time/daylight_seconds.c ****  * Redistribution and use in source and binary forms, with or without
   5:../freeRTOS750/lib_time/daylight_seconds.c ****  * modification, are permitted provided that the following conditions are
   6:../freeRTOS750/lib_time/daylight_seconds.c ****  * met:
   7:../freeRTOS750/lib_time/daylight_seconds.c ****  *
   8:../freeRTOS750/lib_time/daylight_seconds.c ****  * Redistributions of source code must retain the above copyright notice, this
   9:../freeRTOS750/lib_time/daylight_seconds.c ****  * list of conditions and the following disclaimer. Redistributions in binary
  10:../freeRTOS750/lib_time/daylight_seconds.c ****  * form must reproduce the above copyright notice, this list of conditions
  11:../freeRTOS750/lib_time/daylight_seconds.c ****  * and the following disclaimer in the documentation and/or other materials
  12:../freeRTOS750/lib_time/daylight_seconds.c ****  * provided with the distribution. Neither the name of the copyright holders
  13:../freeRTOS750/lib_time/daylight_seconds.c ****  * nor the names of contributors may be used to endorse or promote products
  14:../freeRTOS750/lib_time/daylight_seconds.c ****  * derived from this software without specific prior written permission.
  15:../freeRTOS750/lib_time/daylight_seconds.c ****  *
  16:../freeRTOS750/lib_time/daylight_seconds.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  17:../freeRTOS750/lib_time/daylight_seconds.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  18:../freeRTOS750/lib_time/daylight_seconds.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  19:../freeRTOS750/lib_time/daylight_seconds.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  20:../freeRTOS750/lib_time/daylight_seconds.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  21:../freeRTOS750/lib_time/daylight_seconds.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  22:../freeRTOS750/lib_time/daylight_seconds.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  23:../freeRTOS750/lib_time/daylight_seconds.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  24:../freeRTOS750/lib_time/daylight_seconds.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  25:../freeRTOS750/lib_time/daylight_seconds.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  26:../freeRTOS750/lib_time/daylight_seconds.c ****  * POSSIBILITY OF SUCH DAMAGE.
  27:../freeRTOS750/lib_time/daylight_seconds.c ****  */
  28:../freeRTOS750/lib_time/daylight_seconds.c **** 
  29:../freeRTOS750/lib_time/daylight_seconds.c **** /* $Id$ */
  30:../freeRTOS750/lib_time/daylight_seconds.c **** 
  31:../freeRTOS750/lib_time/daylight_seconds.c **** /*
  32:../freeRTOS750/lib_time/daylight_seconds.c ****     Determine the amount of time the sun is above the horizon. At high latitudes, around the
  33:../freeRTOS750/lib_time/daylight_seconds.c ****     solstices, this can be zero or greater than ONE_DAY.
  34:../freeRTOS750/lib_time/daylight_seconds.c **** 
  35:../freeRTOS750/lib_time/daylight_seconds.c **** */
  36:../freeRTOS750/lib_time/daylight_seconds.c **** 
  37:../freeRTOS750/lib_time/daylight_seconds.c **** #include <time.h>
  38:../freeRTOS750/lib_time/daylight_seconds.c **** #include <math.h>
  39:../freeRTOS750/lib_time/daylight_seconds.c **** 
  40:../freeRTOS750/lib_time/daylight_seconds.c **** extern long     __latitude;
  41:../freeRTOS750/lib_time/daylight_seconds.c **** 
  42:../freeRTOS750/lib_time/daylight_seconds.c **** long
  43:../freeRTOS750/lib_time/daylight_seconds.c **** daylight_seconds(const time_t * timer)
  44:../freeRTOS750/lib_time/daylight_seconds.c **** {
  93               	.LM0:
  94               	.LFBB1:
  95 0000 8F92      		push r8
  96 0002 9F92      		push r9
  97 0004 AF92      		push r10
  98 0006 BF92      		push r11
  99 0008 CF92      		push r12
 100 000a DF92      		push r13
 101 000c EF92      		push r14
 102 000e FF92      		push r15
 103 0010 CF93      		push r28
 104 0012 DF93      		push r29
 105               	/* prologue: function */
 106               	/* frame size = 0 */
 107               	/* stack size = 10 */
 108               	.L__stack_usage = 10
 109 0014 7C01      		movw r14,r24
  45:../freeRTOS750/lib_time/daylight_seconds.c ****     double          l, d;
  46:../freeRTOS750/lib_time/daylight_seconds.c ****     long            n;
  47:../freeRTOS750/lib_time/daylight_seconds.c **** 
  48:../freeRTOS750/lib_time/daylight_seconds.c ****     /* convert latitude to radians */
  49:../freeRTOS750/lib_time/daylight_seconds.c ****     l = __latitude / 206264.806;
 111               	.LM1:
 112 0016 6091 0000 		lds r22,__latitude
 113 001a 7091 0000 		lds r23,__latitude+1
 114 001e 8091 0000 		lds r24,__latitude+2
 115 0022 9091 0000 		lds r25,__latitude+3
 116 0026 0E94 0000 		call __floatsisf
 117 002a 24E3      		ldi r18,lo8(52)
 118 002c 3EE6      		ldi r19,lo8(110)
 119 002e 49E4      		ldi r20,lo8(73)
 120 0030 58E4      		ldi r21,lo8(72)
 121 0032 0E94 0000 		call __divsf3
 122 0036 6B01      		movw r12,r22
 123 0038 D82F      		mov r29,r24
 124 003a C92F      		mov r28,r25
  50:../freeRTOS750/lib_time/daylight_seconds.c **** 
  51:../freeRTOS750/lib_time/daylight_seconds.c ****     d = -solar_declination(timer);
 126               	.LM2:
 127 003c C701      		movw r24,r14
 128 003e 0E94 0000 		call solar_declination
 129 0042 4B01      		movw r8,r22
 130 0044 5C01      		movw r10,r24
  52:../freeRTOS750/lib_time/daylight_seconds.c **** 
  53:../freeRTOS750/lib_time/daylight_seconds.c ****     /* partial 'Sunrise Equation' */
  54:../freeRTOS750/lib_time/daylight_seconds.c ****     d = tan(l) * tan(d);
 132               	.LM3:
 133 0046 9E01      		movw r18,r28
 134 0048 6C2D      		mov r22,r12
 135 004a 7D2D      		mov r23,r13
 136 004c 832F      		mov r24,r19
 137 004e 922F      		mov r25,r18
 138 0050 0E94 0000 		call tan
 139 0054 6B01      		movw r12,r22
 140 0056 7C01      		movw r14,r24
  51:../freeRTOS750/lib_time/daylight_seconds.c ****     d = -solar_declination(timer);
 142               	.LM4:
 143 0058 C501      		movw r24,r10
 144 005a B401      		movw r22,r8
 145 005c 9058      		subi r25,0x80
 147               	.LM5:
 148 005e 0E94 0000 		call tan
 149 0062 9B01      		movw r18,r22
 150 0064 AC01      		movw r20,r24
 151 0066 C701      		movw r24,r14
 152 0068 B601      		movw r22,r12
 153 006a 0E94 0000 		call __mulsf3
 154 006e 7B01      		movw r14,r22
 155 0070 D82F      		mov r29,r24
 156 0072 C92F      		mov r28,r25
  55:../freeRTOS750/lib_time/daylight_seconds.c **** 
  56:../freeRTOS750/lib_time/daylight_seconds.c ****     /* magnitude of d may exceed 1.0 at near solstices */
  57:../freeRTOS750/lib_time/daylight_seconds.c ****     if (d > 1.0)
 158               	.LM6:
 159 0074 20E0      		ldi r18,0
 160 0076 30E0      		ldi r19,0
 161 0078 40E8      		ldi r20,lo8(-128)
 162 007a 5FE3      		ldi r21,lo8(63)
 163 007c FE01      		movw r30,r28
 164 007e 7F2D      		mov r23,r15
 165 0080 8F2F      		mov r24,r31
 166 0082 9E2F      		mov r25,r30
 167 0084 0E94 0000 		call __gtsf2
 168 0088 1816      		cp __zero_reg__,r24
 169 008a 04F0      		brlt .L3
  58:../freeRTOS750/lib_time/daylight_seconds.c ****         d = 1.0;
  59:../freeRTOS750/lib_time/daylight_seconds.c **** 
  60:../freeRTOS750/lib_time/daylight_seconds.c ****     if (d < -1.0)
 171               	.LM7:
 172 008c 20E0      		ldi r18,0
 173 008e 30E0      		ldi r19,0
 174 0090 40E8      		ldi r20,lo8(-128)
 175 0092 5FEB      		ldi r21,lo8(-65)
 176 0094 FE01      		movw r30,r28
 177 0096 6E2D      		mov r22,r14
 178 0098 7F2D      		mov r23,r15
 179 009a 8F2F      		mov r24,r31
 180 009c 9E2F      		mov r25,r30
 181 009e 0E94 0000 		call __ltsf2
 182 00a2 87FD      		sbrc r24,7
 183 00a4 00C0      		rjmp .L4
 184 00a6 00C0      		rjmp .L2
 185               	.L3:
  58:../freeRTOS750/lib_time/daylight_seconds.c ****         d = 1.0;
 187               	.LM8:
 188 00a8 E12C      		mov r14,__zero_reg__
 189 00aa F12C      		mov r15,__zero_reg__
 190 00ac D0E8      		ldi r29,lo8(-128)
 191 00ae CFE3      		ldi r28,lo8(63)
 192 00b0 00C0      		rjmp .L2
 193               	.L4:
  61:../freeRTOS750/lib_time/daylight_seconds.c ****         d = -1.0;
 195               	.LM9:
 196 00b2 E12C      		mov r14,__zero_reg__
 197 00b4 F12C      		mov r15,__zero_reg__
 198 00b6 D0E8      		ldi r29,lo8(-128)
 199 00b8 CFEB      		ldi r28,lo8(-65)
 200               	.L2:
  62:../freeRTOS750/lib_time/daylight_seconds.c **** 
  63:../freeRTOS750/lib_time/daylight_seconds.c ****     /* derive hour angle */
  64:../freeRTOS750/lib_time/daylight_seconds.c ****     d = acos(d);
 202               	.LM10:
 203 00ba 9E01      		movw r18,r28
 204 00bc 6E2D      		mov r22,r14
 205 00be 7F2D      		mov r23,r15
 206 00c0 832F      		mov r24,r19
 207 00c2 9C2F      		mov r25,r28
 208 00c4 0E94 0000 		call acos
  65:../freeRTOS750/lib_time/daylight_seconds.c **** 
  66:../freeRTOS750/lib_time/daylight_seconds.c ****     /* but for atmospheric refraction, this would be d /= M_PI */
  67:../freeRTOS750/lib_time/daylight_seconds.c ****     d /= 3.112505;
 210               	.LM11:
 211 00c8 28E4      		ldi r18,lo8(72)
 212 00ca 33E3      		ldi r19,lo8(51)
 213 00cc 47E4      		ldi r20,lo8(71)
 214 00ce 50E4      		ldi r21,lo8(64)
 215 00d0 0E94 0000 		call __divsf3
  68:../freeRTOS750/lib_time/daylight_seconds.c **** 
  69:../freeRTOS750/lib_time/daylight_seconds.c ****     n = ONE_DAY * d;
 217               	.LM12:
 218 00d4 20E0      		ldi r18,0
 219 00d6 30EC      		ldi r19,lo8(-64)
 220 00d8 48EA      		ldi r20,lo8(-88)
 221 00da 57E4      		ldi r21,lo8(71)
 222 00dc 0E94 0000 		call __mulsf3
 223 00e0 0E94 0000 		call __fixsfsi
 224               	/* epilogue start */
  70:../freeRTOS750/lib_time/daylight_seconds.c **** 
  71:../freeRTOS750/lib_time/daylight_seconds.c ****     return n;
  72:../freeRTOS750/lib_time/daylight_seconds.c **** }
 226               	.LM13:
 227 00e4 DF91      		pop r29
 228 00e6 CF91      		pop r28
 229 00e8 FF90      		pop r15
 230 00ea EF90      		pop r14
 231 00ec DF90      		pop r13
 232 00ee CF90      		pop r12
 233 00f0 BF90      		pop r11
 234 00f2 AF90      		pop r10
 235 00f4 9F90      		pop r9
 236 00f6 8F90      		pop r8
 237 00f8 0895      		ret
 239               	.Lscope1:
 241               		.stabd	78,0,0
 243               	.Letext0:
 244               		.ident	"GCC: (GNU) 4.7.2"
DEFINED SYMBOLS
                            *ABS*:00000000 daylight_seconds.c
     /tmp/cckbqZe9.s:2      *ABS*:0000003e __SP_H__
     /tmp/cckbqZe9.s:3      *ABS*:0000003d __SP_L__
     /tmp/cckbqZe9.s:4      *ABS*:0000003f __SREG__
     /tmp/cckbqZe9.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cckbqZe9.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cckbqZe9.s:90     .text:00000000 daylight_seconds

UNDEFINED SYMBOLS
__floatsisf
__divsf3
__mulsf3
__gtsf2
__ltsf2
__fixsfsi
__latitude
solar_declination
tan
acos
