   1               		.file	"isotime_r.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
  83               	.global	isotime_r
  85               	isotime_r:
  86               		.stabd	46,0,0
   1:../freeRTOS750/lib_time/isotime_r.c **** /*
   2:../freeRTOS750/lib_time/isotime_r.c ****  * (C)2012 Michael Duane Rice All rights reserved.
   3:../freeRTOS750/lib_time/isotime_r.c ****  *
   4:../freeRTOS750/lib_time/isotime_r.c ****  * Redistribution and use in source and binary forms, with or without
   5:../freeRTOS750/lib_time/isotime_r.c ****  * modification, are permitted provided that the following conditions are
   6:../freeRTOS750/lib_time/isotime_r.c ****  * met:
   7:../freeRTOS750/lib_time/isotime_r.c ****  *
   8:../freeRTOS750/lib_time/isotime_r.c ****  * Redistributions of source code must retain the above copyright notice, this
   9:../freeRTOS750/lib_time/isotime_r.c ****  * list of conditions and the following disclaimer. Redistributions in binary
  10:../freeRTOS750/lib_time/isotime_r.c ****  * form must reproduce the above copyright notice, this list of conditions
  11:../freeRTOS750/lib_time/isotime_r.c ****  * and the following disclaimer in the documentation and/or other materials
  12:../freeRTOS750/lib_time/isotime_r.c ****  * provided with the distribution. Neither the name of the copyright holders
  13:../freeRTOS750/lib_time/isotime_r.c ****  * nor the names of contributors may be used to endorse or promote products
  14:../freeRTOS750/lib_time/isotime_r.c ****  * derived from this software without specific prior written permission.
  15:../freeRTOS750/lib_time/isotime_r.c ****  *
  16:../freeRTOS750/lib_time/isotime_r.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  17:../freeRTOS750/lib_time/isotime_r.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  18:../freeRTOS750/lib_time/isotime_r.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  19:../freeRTOS750/lib_time/isotime_r.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  20:../freeRTOS750/lib_time/isotime_r.c ****  * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  21:../freeRTOS750/lib_time/isotime_r.c ****  * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  22:../freeRTOS750/lib_time/isotime_r.c ****  * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  23:../freeRTOS750/lib_time/isotime_r.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  24:../freeRTOS750/lib_time/isotime_r.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  25:../freeRTOS750/lib_time/isotime_r.c ****  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  26:../freeRTOS750/lib_time/isotime_r.c ****  * POSSIBILITY OF SUCH DAMAGE.
  27:../freeRTOS750/lib_time/isotime_r.c ****  */
  28:../freeRTOS750/lib_time/isotime_r.c **** 
  29:../freeRTOS750/lib_time/isotime_r.c **** /* $Id$ */
  30:../freeRTOS750/lib_time/isotime_r.c **** 
  31:../freeRTOS750/lib_time/isotime_r.c **** /*
  32:../freeRTOS750/lib_time/isotime_r.c **** 	Re entrant version of isotime(),  which prints the date and time in ISO 8601 format.
  33:../freeRTOS750/lib_time/isotime_r.c **** */
  34:../freeRTOS750/lib_time/isotime_r.c **** 
  35:../freeRTOS750/lib_time/isotime_r.c **** #include <stdlib.h>
  36:../freeRTOS750/lib_time/isotime_r.c **** #include <time.h>
  37:../freeRTOS750/lib_time/isotime_r.c **** 
  38:../freeRTOS750/lib_time/isotime_r.c **** extern void __print_lz(int , char *, char );
  39:../freeRTOS750/lib_time/isotime_r.c **** 
  40:../freeRTOS750/lib_time/isotime_r.c **** void
  41:../freeRTOS750/lib_time/isotime_r.c **** isotime_r(const struct tm * tmptr, char *buffer)
  42:../freeRTOS750/lib_time/isotime_r.c **** {
  88               	.LM0:
  89               	.LFBB1:
  90 0000 EF92      		push r14
  91 0002 FF92      		push r15
  92 0004 0F93      		push r16
  93 0006 1F93      		push r17
  94 0008 CF93      		push r28
  95 000a DF93      		push r29
  96               	/* prologue: function */
  97               	/* frame size = 0 */
  98               	/* stack size = 6 */
  99               	.L__stack_usage = 6
 100 000c 8C01      		movw r16,r24
 101 000e EB01      		movw r28,r22
  43:../freeRTOS750/lib_time/isotime_r.c **** 	int             i;
  44:../freeRTOS750/lib_time/isotime_r.c **** 
  45:../freeRTOS750/lib_time/isotime_r.c **** 	i = tmptr->tm_year + 1900;
 103               	.LM1:
 104 0010 FC01      		movw r30,r24
 105 0012 8681      		ldd r24,Z+6
 106 0014 9781      		ldd r25,Z+7
 107 0016 8459      		subi r24,-108
 108 0018 984F      		sbci r25,-8
  46:../freeRTOS750/lib_time/isotime_r.c **** 	__print_lz(i/100, buffer, '-');
 110               	.LM2:
 111 001a 64E6      		ldi r22,lo8(100)
 112 001c 70E0      		ldi r23,0
 113 001e 0E94 0000 		call __divmodhi4
 114 0022 9B01      		movw r18,r22
 115 0024 7C01      		movw r14,r24
 116 0026 4DE2      		ldi r20,lo8(45)
 117 0028 BE01      		movw r22,r28
 118 002a C901      		movw r24,r18
 119 002c 0E94 0000 		call __print_lz
  47:../freeRTOS750/lib_time/isotime_r.c **** 	buffer+=2;
 121               	.LM3:
 122 0030 BE01      		movw r22,r28
 123 0032 6E5F      		subi r22,-2
 124 0034 7F4F      		sbci r23,-1
  48:../freeRTOS750/lib_time/isotime_r.c **** 	__print_lz(i%100, buffer,'-');
 126               	.LM4:
 127 0036 4DE2      		ldi r20,lo8(45)
 128 0038 C701      		movw r24,r14
 129 003a 0E94 0000 		call __print_lz
  49:../freeRTOS750/lib_time/isotime_r.c **** 	buffer+=3;
 131               	.LM5:
 132 003e BE01      		movw r22,r28
 133 0040 6B5F      		subi r22,-5
 134 0042 7F4F      		sbci r23,-1
  50:../freeRTOS750/lib_time/isotime_r.c **** 
  51:../freeRTOS750/lib_time/isotime_r.c **** 	i = tmptr->tm_mon + 1;
 136               	.LM6:
 137 0044 F801      		movw r30,r16
 138 0046 8581      		ldd r24,Z+5
 139 0048 9927      		clr r25
 140 004a 87FD      		sbrc r24,7
 141 004c 9095      		com r25
  52:../freeRTOS750/lib_time/isotime_r.c **** 	__print_lz(i, buffer,'-');
 143               	.LM7:
 144 004e 4DE2      		ldi r20,lo8(45)
 145 0050 0196      		adiw r24,1
 146 0052 0E94 0000 		call __print_lz
  53:../freeRTOS750/lib_time/isotime_r.c **** 	buffer+=3;
 148               	.LM8:
 149 0056 BE01      		movw r22,r28
 150 0058 685F      		subi r22,-8
 151 005a 7F4F      		sbci r23,-1
  54:../freeRTOS750/lib_time/isotime_r.c **** 
  55:../freeRTOS750/lib_time/isotime_r.c **** 	i = tmptr->tm_mday;
 153               	.LM9:
 154 005c F801      		movw r30,r16
 155 005e 8381      		ldd r24,Z+3
  56:../freeRTOS750/lib_time/isotime_r.c **** 	__print_lz(i, buffer,' ');
 157               	.LM10:
 158 0060 40E2      		ldi r20,lo8(32)
 159 0062 9927      		clr r25
 160 0064 87FD      		sbrc r24,7
 161 0066 9095      		com r25
 162 0068 0E94 0000 		call __print_lz
  57:../freeRTOS750/lib_time/isotime_r.c **** 	buffer+=3;
 164               	.LM11:
 165 006c BE01      		movw r22,r28
 166 006e 655F      		subi r22,-11
 167 0070 7F4F      		sbci r23,-1
  58:../freeRTOS750/lib_time/isotime_r.c **** 
  59:../freeRTOS750/lib_time/isotime_r.c **** 	i = tmptr->tm_hour;
 169               	.LM12:
 170 0072 F801      		movw r30,r16
 171 0074 8281      		ldd r24,Z+2
  60:../freeRTOS750/lib_time/isotime_r.c **** 	__print_lz(i, buffer,':');
 173               	.LM13:
 174 0076 4AE3      		ldi r20,lo8(58)
 175 0078 9927      		clr r25
 176 007a 87FD      		sbrc r24,7
 177 007c 9095      		com r25
 178 007e 0E94 0000 		call __print_lz
  61:../freeRTOS750/lib_time/isotime_r.c **** 	buffer+=3;
 180               	.LM14:
 181 0082 BE01      		movw r22,r28
 182 0084 625F      		subi r22,-14
 183 0086 7F4F      		sbci r23,-1
  62:../freeRTOS750/lib_time/isotime_r.c **** 
  63:../freeRTOS750/lib_time/isotime_r.c **** 	i = tmptr->tm_min;
 185               	.LM15:
 186 0088 F801      		movw r30,r16
 187 008a 8181      		ldd r24,Z+1
  64:../freeRTOS750/lib_time/isotime_r.c **** 	__print_lz(i, buffer,':');
 189               	.LM16:
 190 008c 4AE3      		ldi r20,lo8(58)
 191 008e 9927      		clr r25
 192 0090 87FD      		sbrc r24,7
 193 0092 9095      		com r25
 194 0094 0E94 0000 		call __print_lz
  65:../freeRTOS750/lib_time/isotime_r.c **** 	buffer+=3;
 196               	.LM17:
 197 0098 BE01      		movw r22,r28
 198 009a 6F5E      		subi r22,-17
 199 009c 7F4F      		sbci r23,-1
  66:../freeRTOS750/lib_time/isotime_r.c **** 
  67:../freeRTOS750/lib_time/isotime_r.c **** 	i = tmptr->tm_sec;
 201               	.LM18:
 202 009e F801      		movw r30,r16
 203 00a0 8081      		ld r24,Z
  68:../freeRTOS750/lib_time/isotime_r.c **** 	__print_lz(i, buffer,0);
 205               	.LM19:
 206 00a2 40E0      		ldi r20,0
 207 00a4 9927      		clr r25
 208 00a6 87FD      		sbrc r24,7
 209 00a8 9095      		com r25
 210               	/* epilogue start */
  69:../freeRTOS750/lib_time/isotime_r.c **** 
  70:../freeRTOS750/lib_time/isotime_r.c **** }
 212               	.LM20:
 213 00aa DF91      		pop r29
 214 00ac CF91      		pop r28
 215 00ae 1F91      		pop r17
 216 00b0 0F91      		pop r16
 217 00b2 FF90      		pop r15
 218 00b4 EF90      		pop r14
  68:../freeRTOS750/lib_time/isotime_r.c **** 	__print_lz(i, buffer,0);
 220               	.LM21:
 221 00b6 0C94 0000 		jmp __print_lz
 223               	.Lscope1:
 225               		.stabd	78,0,0
 227               	.Letext0:
 228               		.ident	"GCC: (GNU) 4.7.2"
DEFINED SYMBOLS
                            *ABS*:00000000 isotime_r.c
     /tmp/cc2QrRYq.s:2      *ABS*:0000003e __SP_H__
     /tmp/cc2QrRYq.s:3      *ABS*:0000003d __SP_L__
     /tmp/cc2QrRYq.s:4      *ABS*:0000003f __SREG__
     /tmp/cc2QrRYq.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/cc2QrRYq.s:6      *ABS*:00000001 __zero_reg__
     /tmp/cc2QrRYq.s:85     .text:00000000 isotime_r

UNDEFINED SYMBOLS
__divmodhi4
__print_lz
