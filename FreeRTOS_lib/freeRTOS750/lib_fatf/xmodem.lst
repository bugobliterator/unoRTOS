   1               		.file	"xmodem.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 109               	flushinput:
 110               		.stabd	46,0,0
   1:../freeRTOS750/lib_fatf/xmodem.c **** /*
   2:../freeRTOS750/lib_fatf/xmodem.c ****  * Copyright 2001-2010 Georges Menie (www.menie.org)
   3:../freeRTOS750/lib_fatf/xmodem.c ****  * All rights reserved.
   4:../freeRTOS750/lib_fatf/xmodem.c ****  * Redistribution and use in source and binary forms, with or without
   5:../freeRTOS750/lib_fatf/xmodem.c ****  * modification, are permitted provided that the following conditions are met:
   6:../freeRTOS750/lib_fatf/xmodem.c ****  *
   7:../freeRTOS750/lib_fatf/xmodem.c ****  *     * Redistributions of source code must retain the above copyright
   8:../freeRTOS750/lib_fatf/xmodem.c ****  *       notice, this list of conditions and the following disclaimer.
   9:../freeRTOS750/lib_fatf/xmodem.c ****  *     * Redistributions in binary form must reproduce the above copyright
  10:../freeRTOS750/lib_fatf/xmodem.c ****  *       notice, this list of conditions and the following disclaimer in the
  11:../freeRTOS750/lib_fatf/xmodem.c ****  *       documentation and/or other materials provided with the distribution.
  12:../freeRTOS750/lib_fatf/xmodem.c ****  *     * Neither the name of the University of California, Berkeley nor the
  13:../freeRTOS750/lib_fatf/xmodem.c ****  *       names of its contributors may be used to endorse or promote products
  14:../freeRTOS750/lib_fatf/xmodem.c ****  *       derived from this software without specific prior written permission.
  15:../freeRTOS750/lib_fatf/xmodem.c ****  *
  16:../freeRTOS750/lib_fatf/xmodem.c ****  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND ANY
  17:../freeRTOS750/lib_fatf/xmodem.c ****  * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  18:../freeRTOS750/lib_fatf/xmodem.c ****  * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  19:../freeRTOS750/lib_fatf/xmodem.c ****  * DISCLAIMED. IN NO EVENT SHALL THE REGENTS AND CONTRIBUTORS BE LIABLE FOR ANY
  20:../freeRTOS750/lib_fatf/xmodem.c ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  21:../freeRTOS750/lib_fatf/xmodem.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  22:../freeRTOS750/lib_fatf/xmodem.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  23:../freeRTOS750/lib_fatf/xmodem.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  24:../freeRTOS750/lib_fatf/xmodem.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  25:../freeRTOS750/lib_fatf/xmodem.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  26:../freeRTOS750/lib_fatf/xmodem.c ****  */
  27:../freeRTOS750/lib_fatf/xmodem.c **** 
  28:../freeRTOS750/lib_fatf/xmodem.c **** /* this code needs standard functions memcpy() and memset()
  29:../freeRTOS750/lib_fatf/xmodem.c ****    and input/output functions _inbyte() and _outbyte().
  30:../freeRTOS750/lib_fatf/xmodem.c **** 
  31:../freeRTOS750/lib_fatf/xmodem.c ****    the prototypes of the input/output functions are:
  32:../freeRTOS750/lib_fatf/xmodem.c ****      int _inbyte(uint16_t timeout); // msec timeout
  33:../freeRTOS750/lib_fatf/xmodem.c ****      void _outbyte(int c);
  34:../freeRTOS750/lib_fatf/xmodem.c **** 
  35:../freeRTOS750/lib_fatf/xmodem.c ****  */
  36:../freeRTOS750/lib_fatf/xmodem.c **** 
  37:../freeRTOS750/lib_fatf/xmodem.c **** #include <string.h>
  38:../freeRTOS750/lib_fatf/xmodem.c **** 
  39:../freeRTOS750/lib_fatf/xmodem.c **** #include <lib_serial.h>
  40:../freeRTOS750/lib_fatf/xmodem.c **** #include <lib_crc.h>
  41:../freeRTOS750/lib_fatf/xmodem.c **** 
  42:../freeRTOS750/lib_fatf/xmodem.c **** #include <xmodem.h>
  43:../freeRTOS750/lib_fatf/xmodem.c **** 
  44:../freeRTOS750/lib_fatf/xmodem.c **** #define SOH  0x01
  45:../freeRTOS750/lib_fatf/xmodem.c **** #define STX  0x02
  46:../freeRTOS750/lib_fatf/xmodem.c **** #define EOT  0x04
  47:../freeRTOS750/lib_fatf/xmodem.c **** #define ACK  0x06
  48:../freeRTOS750/lib_fatf/xmodem.c **** #define NAK  0x15
  49:../freeRTOS750/lib_fatf/xmodem.c **** #define CAN  0x18
  50:../freeRTOS750/lib_fatf/xmodem.c **** #define CTRLZ 0x1A
  51:../freeRTOS750/lib_fatf/xmodem.c **** 
  52:../freeRTOS750/lib_fatf/xmodem.c **** #define DLY_1S 1000
  53:../freeRTOS750/lib_fatf/xmodem.c **** #define MAXRETRANS 25
  54:../freeRTOS750/lib_fatf/xmodem.c **** 
  55:../freeRTOS750/lib_fatf/xmodem.c **** 
  56:../freeRTOS750/lib_fatf/xmodem.c **** static uint8_t check(int crc, const uint8_t *buf, int sz)
  57:../freeRTOS750/lib_fatf/xmodem.c **** {
  58:../freeRTOS750/lib_fatf/xmodem.c **** 	if (crc) {
  59:../freeRTOS750/lib_fatf/xmodem.c **** 		uint16_t crc = crc16_ccitt(buf, sz);
  60:../freeRTOS750/lib_fatf/xmodem.c **** 		uint16_t tcrc = (buf[sz]<<8)+buf[sz+1];
  61:../freeRTOS750/lib_fatf/xmodem.c **** 		if (crc == tcrc)
  62:../freeRTOS750/lib_fatf/xmodem.c **** 			return 1;
  63:../freeRTOS750/lib_fatf/xmodem.c **** 	}
  64:../freeRTOS750/lib_fatf/xmodem.c **** 	else {
  65:../freeRTOS750/lib_fatf/xmodem.c **** 		int i;
  66:../freeRTOS750/lib_fatf/xmodem.c **** 		uint8_t cks = 0;
  67:../freeRTOS750/lib_fatf/xmodem.c **** 		for (i = 0; i < sz; ++i) {
  68:../freeRTOS750/lib_fatf/xmodem.c **** 			cks += buf[i];
  69:../freeRTOS750/lib_fatf/xmodem.c **** 		}
  70:../freeRTOS750/lib_fatf/xmodem.c **** 		if (cks == buf[sz])
  71:../freeRTOS750/lib_fatf/xmodem.c **** 		return 1;
  72:../freeRTOS750/lib_fatf/xmodem.c **** 	}
  73:../freeRTOS750/lib_fatf/xmodem.c **** 
  74:../freeRTOS750/lib_fatf/xmodem.c **** 	return 0;
  75:../freeRTOS750/lib_fatf/xmodem.c **** }
  76:../freeRTOS750/lib_fatf/xmodem.c **** 
  77:../freeRTOS750/lib_fatf/xmodem.c **** static void flushinput(void)
  78:../freeRTOS750/lib_fatf/xmodem.c **** {
 112               	.LM0:
 113               	.LFBB1:
 114               	/* prologue: function */
 115               	/* frame size = 0 */
 116               	/* stack size = 0 */
 117               	.L__stack_usage = 0
 118               	.L2:
 119               	.LBB2:
  79:../freeRTOS750/lib_fatf/xmodem.c **** 	while (_inbyte(((DLY_1S)*3)>>1) >= 0)
 121               	.LM1:
 122 0000 8CED      		ldi r24,lo8(-36)
 123 0002 95E0      		ldi r25,lo8(5)
 124 0004 0E94 0000 		call _inbyte
 125 0008 97FF      		sbrs r25,7
 126 000a 00C0      		rjmp .L2
 127               	/* epilogue start */
 128               	.LBE2:
  80:../freeRTOS750/lib_fatf/xmodem.c **** 		;
  81:../freeRTOS750/lib_fatf/xmodem.c **** }
 130               	.LM2:
 131 000c 0895      		ret
 133               	.Lscope1:
 135               		.stabd	78,0,0
 139               	.global	xmodemReceive
 141               	xmodemReceive:
 142               		.stabd	46,0,0
  82:../freeRTOS750/lib_fatf/xmodem.c **** 
  83:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemReceive(uint8_t *dest, uint16_t dest_size)
  84:../freeRTOS750/lib_fatf/xmodem.c **** {
 144               	.LM3:
 145               	.LFBB2:
 146 000e 2F92      		push r2
 147 0010 3F92      		push r3
 148 0012 4F92      		push r4
 149 0014 5F92      		push r5
 150 0016 6F92      		push r6
 151 0018 7F92      		push r7
 152 001a 8F92      		push r8
 153 001c 9F92      		push r9
 154 001e AF92      		push r10
 155 0020 BF92      		push r11
 156 0022 CF92      		push r12
 157 0024 DF92      		push r13
 158 0026 EF92      		push r14
 159 0028 FF92      		push r15
 160 002a 0F93      		push r16
 161 002c 1F93      		push r17
 162 002e CF93      		push r28
 163 0030 DF93      		push r29
 164 0032 CDB7      		in r28,__SP_L__
 165 0034 DEB7      		in r29,__SP_H__
 166 0036 CC50      		subi r28,12
 167 0038 D440      		sbci r29,4
 168 003a 0FB6      		in __tmp_reg__,__SREG__
 169 003c F894      		cli
 170 003e DEBF      		out __SP_H__,r29
 171 0040 0FBE      		out __SREG__,__tmp_reg__
 172 0042 CDBF      		out __SP_L__,r28
 173               	/* prologue: function */
 174               	/* frame size = 1036 */
 175               	/* stack size = 1054 */
 176               	.L__stack_usage = 1054
 177 0044 5C01      		movw r10,r24
 178 0046 4B01      		movw r8,r22
 179               	.LBB13:
  85:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t xbuff[1030]; /* 1024 for XModem 1k + 3 head chars + 2 crc + nul */
  86:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t *p;
  87:../freeRTOS750/lib_fatf/xmodem.c **** 	uint16_t bufsz, crc = 0;
  88:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t trychar = 'C';
  89:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t packetno = 1;
  90:../freeRTOS750/lib_fatf/xmodem.c **** 	uint16_t i, c, len = 0;
  91:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t retry, retrans = MAXRETRANS;
 181               	.LM4:
 182 0048 69E1      		ldi r22,lo8(25)
 183 004a 462E      		mov r4,r22
  90:../freeRTOS750/lib_fatf/xmodem.c **** 	uint16_t i, c, len = 0;
 185               	.LM5:
 186 004c E12C      		mov r14,__zero_reg__
 187 004e F12C      		mov r15,__zero_reg__
  89:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t packetno = 1;
 189               	.LM6:
 190 0050 5524      		clr r5
 191 0052 5394      		inc r5
  88:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t trychar = 'C';
 193               	.LM7:
 194 0054 23E4      		ldi r18,lo8(67)
  87:../freeRTOS750/lib_fatf/xmodem.c **** 	uint16_t bufsz, crc = 0;
 196               	.LM8:
 197 0056 612C      		mov r6,__zero_reg__
 198 0058 712C      		mov r7,__zero_reg__
  83:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemReceive(uint8_t *dest, uint16_t dest_size)
 200               	.LM9:
 201 005a CC24      		clr r12
 202 005c C394      		inc r12
 203 005e D12C      		mov r13,__zero_reg__
 204 0060 CC0E      		add r12,r28
 205 0062 DD1E      		adc r13,r29
 206 0064 C094      		com r12
 207 0066 D094      		com r13
 208 0068 8E01      		movw r16,r28
 209 006a 0C5F      		subi r16,-4
 210 006c 1F4F      		sbci r17,-1
 211 006e 00C0      		rjmp .L43
 212               	.L32:
  92:../freeRTOS750/lib_fatf/xmodem.c **** 
  93:../freeRTOS750/lib_fatf/xmodem.c **** 	for(;;) {
  94:../freeRTOS750/lib_fatf/xmodem.c **** 		for( retry = 0; retry < 16; ++retry) {
  95:../freeRTOS750/lib_fatf/xmodem.c **** 			if (trychar) _outbyte(trychar);
  96:../freeRTOS750/lib_fatf/xmodem.c **** 			if ((c = _inbyte((DLY_1S)<<1)) >= 0) {
  97:../freeRTOS750/lib_fatf/xmodem.c **** 				switch (c) {
  98:../freeRTOS750/lib_fatf/xmodem.c **** 				case SOH:
  99:../freeRTOS750/lib_fatf/xmodem.c **** 					bufsz = 128;
 100:../freeRTOS750/lib_fatf/xmodem.c **** 					goto start_recv;
 101:../freeRTOS750/lib_fatf/xmodem.c **** 				case STX:
 102:../freeRTOS750/lib_fatf/xmodem.c **** 					bufsz = 1024;
 103:../freeRTOS750/lib_fatf/xmodem.c **** 					goto start_recv;
 104:../freeRTOS750/lib_fatf/xmodem.c **** 				case EOT:
 105:../freeRTOS750/lib_fatf/xmodem.c **** 					flushinput();
 106:../freeRTOS750/lib_fatf/xmodem.c **** 					_outbyte(ACK);
 107:../freeRTOS750/lib_fatf/xmodem.c **** 					return len; /* normal end */
 108:../freeRTOS750/lib_fatf/xmodem.c **** 				case CAN:
 109:../freeRTOS750/lib_fatf/xmodem.c **** 					if ((c = _inbyte(DLY_1S)) == CAN) {
 110:../freeRTOS750/lib_fatf/xmodem.c **** 						flushinput();
 111:../freeRTOS750/lib_fatf/xmodem.c **** 						_outbyte(ACK);
 112:../freeRTOS750/lib_fatf/xmodem.c **** 						return -1; /* cancelled by remote */
 113:../freeRTOS750/lib_fatf/xmodem.c **** 					}
 114:../freeRTOS750/lib_fatf/xmodem.c **** 					break;
 115:../freeRTOS750/lib_fatf/xmodem.c **** 				default:
 116:../freeRTOS750/lib_fatf/xmodem.c **** 					break;
 117:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 118:../freeRTOS750/lib_fatf/xmodem.c **** 			}
 119:../freeRTOS750/lib_fatf/xmodem.c **** 		}
 120:../freeRTOS750/lib_fatf/xmodem.c **** 		if (trychar == 'C') { trychar = NAK; continue; }
 214               	.LM10:
 215 0070 25E1      		ldi r18,lo8(21)
 216               	.L43:
  87:../freeRTOS750/lib_fatf/xmodem.c **** 	uint16_t bufsz, crc = 0;
 218               	.LM11:
 219 0072 50E1      		ldi r21,lo8(16)
 220 0074 352E      		mov r3,r21
 221               	.L14:
  95:../freeRTOS750/lib_fatf/xmodem.c **** 			if (trychar) _outbyte(trychar);
 223               	.LM12:
 224 0076 2223      		tst r18
 225 0078 01F0      		breq .L6
 226               	.LBB14:
  95:../freeRTOS750/lib_fatf/xmodem.c **** 			if (trychar) _outbyte(trychar);
 228               	.LM13:
 229 007a 822F      		mov r24,r18
 230 007c 90E0      		ldi r25,0
 231 007e C45F      		subi r28,lo8(-1036)
 232 0080 DB4F      		sbci r29,hi8(-1036)
 233 0082 2883      		st Y,r18
 234 0084 CC50      		subi r28,lo8(1036)
 235 0086 D440      		sbci r29,hi8(1036)
 236 0088 0E94 0000 		call _outbyte
 237 008c C45F      		subi r28,lo8(-1036)
 238 008e DB4F      		sbci r29,hi8(-1036)
 239 0090 2881      		ld r18,Y
 240 0092 CC50      		subi r28,lo8(1036)
 241 0094 D440      		sbci r29,hi8(1036)
 242               	.L6:
 243               	.LBE14:
 244               	.LBB15:
  96:../freeRTOS750/lib_fatf/xmodem.c **** 			if ((c = _inbyte((DLY_1S)<<1)) >= 0) {
 246               	.LM14:
 247 0096 80ED      		ldi r24,lo8(-48)
 248 0098 97E0      		ldi r25,lo8(7)
 249 009a C45F      		subi r28,lo8(-1036)
 250 009c DB4F      		sbci r29,hi8(-1036)
 251 009e 2883      		st Y,r18
 252 00a0 CC50      		subi r28,lo8(1036)
 253 00a2 D440      		sbci r29,hi8(1036)
 254 00a4 0E94 0000 		call _inbyte
  97:../freeRTOS750/lib_fatf/xmodem.c **** 				switch (c) {
 256               	.LM15:
 257 00a8 C45F      		subi r28,lo8(-1036)
 258 00aa DB4F      		sbci r29,hi8(-1036)
 259 00ac 2881      		ld r18,Y
 260 00ae CC50      		subi r28,lo8(1036)
 261 00b0 D440      		sbci r29,hi8(1036)
 262 00b2 8230      		cpi r24,2
 263 00b4 9105      		cpc r25,__zero_reg__
 264 00b6 01F4      		brne .+2
 265 00b8 00C0      		rjmp .L31
 266 00ba 00F4      		brsh .L12
 267 00bc 8130      		cpi r24,1
 268 00be 9105      		cpc r25,__zero_reg__
 269 00c0 01F4      		brne .L7
 270 00c2 00C0      		rjmp .L8
 271               	.L12:
 272 00c4 8430      		cpi r24,4
 273 00c6 9105      		cpc r25,__zero_reg__
 274 00c8 01F0      		breq .L10
 275 00ca 4897      		sbiw r24,24
 276 00cc 01F4      		brne .L7
 277 00ce 00C0      		rjmp .L11
 278               	.L10:
 279               	.LBB16:
 105:../freeRTOS750/lib_fatf/xmodem.c **** 					flushinput();
 281               	.LM16:
 282 00d0 0E94 0000 		call flushinput
 106:../freeRTOS750/lib_fatf/xmodem.c **** 					_outbyte(ACK);
 284               	.LM17:
 285 00d4 86E0      		ldi r24,lo8(6)
 286 00d6 90E0      		ldi r25,0
 287 00d8 0E94 0000 		call _outbyte
 107:../freeRTOS750/lib_fatf/xmodem.c **** 					return len; /* normal end */
 289               	.LM18:
 290 00dc 8E2D      		mov r24,r14
 291 00de 00C0      		rjmp .L44
 292               	.L11:
 109:../freeRTOS750/lib_fatf/xmodem.c **** 					if ((c = _inbyte(DLY_1S)) == CAN) {
 294               	.LM19:
 295 00e0 88EE      		ldi r24,lo8(-24)
 296 00e2 93E0      		ldi r25,lo8(3)
 297 00e4 C45F      		subi r28,lo8(-1036)
 298 00e6 DB4F      		sbci r29,hi8(-1036)
 299 00e8 2883      		st Y,r18
 300 00ea CC50      		subi r28,lo8(1036)
 301 00ec D440      		sbci r29,hi8(1036)
 302 00ee 0E94 0000 		call _inbyte
 303 00f2 C45F      		subi r28,lo8(-1036)
 304 00f4 DB4F      		sbci r29,hi8(-1036)
 305 00f6 2881      		ld r18,Y
 306 00f8 CC50      		subi r28,lo8(1036)
 307 00fa D440      		sbci r29,hi8(1036)
 308 00fc 4897      		sbiw r24,24
 309 00fe 01F4      		brne .L7
 110:../freeRTOS750/lib_fatf/xmodem.c **** 						flushinput();
 311               	.LM20:
 312 0100 0E94 0000 		call flushinput
 111:../freeRTOS750/lib_fatf/xmodem.c **** 						_outbyte(ACK);
 314               	.LM21:
 315 0104 86E0      		ldi r24,lo8(6)
 316 0106 90E0      		ldi r25,0
 317 0108 0E94 0000 		call _outbyte
 112:../freeRTOS750/lib_fatf/xmodem.c **** 						return -1; /* cancelled by remote */
 319               	.LM22:
 320 010c 8FEF      		ldi r24,lo8(-1)
 321 010e 00C0      		rjmp .L44
 322               	.L7:
 323 0110 3A94      		dec r3
 324               	.LBE16:
 325               	.LBE15:
  94:../freeRTOS750/lib_fatf/xmodem.c **** 		for( retry = 0; retry < 16; ++retry) {
 327               	.LM23:
 328 0112 01F0      		breq .+2
 329 0114 00C0      		rjmp .L14
 331               	.LM24:
 332 0116 2334      		cpi r18,lo8(67)
 333 0118 01F4      		brne .+2
 334 011a 00C0      		rjmp .L32
 121:../freeRTOS750/lib_fatf/xmodem.c **** 		flushinput();
 336               	.LM25:
 337 011c 0E94 0000 		call flushinput
 122:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 339               	.LM26:
 340 0120 88E1      		ldi r24,lo8(24)
 341 0122 90E0      		ldi r25,0
 342 0124 0E94 0000 		call _outbyte
 123:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 344               	.LM27:
 345 0128 88E1      		ldi r24,lo8(24)
 346 012a 90E0      		ldi r25,0
 347 012c 0E94 0000 		call _outbyte
 124:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 349               	.LM28:
 350 0130 88E1      		ldi r24,lo8(24)
 351 0132 90E0      		ldi r25,0
 352 0134 0E94 0000 		call _outbyte
 125:../freeRTOS750/lib_fatf/xmodem.c **** 		return -2; /* sync error */
 354               	.LM29:
 355 0138 8EEF      		ldi r24,lo8(-2)
 356 013a 00C0      		rjmp .L44
 357               	.L8:
 358               	.LBB17:
  99:../freeRTOS750/lib_fatf/xmodem.c **** 					bufsz = 128;
 360               	.LM30:
 361 013c 40E8      		ldi r20,lo8(-128)
 362 013e 242E      		mov r2,r20
 363 0140 312C      		mov r3,__zero_reg__
 364 0142 00C0      		rjmp .L9
 365               	.L31:
 102:../freeRTOS750/lib_fatf/xmodem.c **** 					bufsz = 1024;
 367               	.LM31:
 368 0144 212C      		mov r2,__zero_reg__
 369 0146 34E0      		ldi r19,lo8(4)
 370 0148 332E      		mov r3,r19
 371               	.L9:
 372               	.LBE17:
 126:../freeRTOS750/lib_fatf/xmodem.c **** 
 127:../freeRTOS750/lib_fatf/xmodem.c **** 	start_recv:
 128:../freeRTOS750/lib_fatf/xmodem.c **** 		if (trychar == 'C') crc = 1;
 374               	.LM32:
 375 014a 2334      		cpi r18,lo8(67)
 376 014c 01F4      		brne .L16
 377 014e 6624      		clr r6
 378 0150 6394      		inc r6
 379 0152 712C      		mov r7,__zero_reg__
 380               	.L16:
 129:../freeRTOS750/lib_fatf/xmodem.c **** 		trychar = 0;
 130:../freeRTOS750/lib_fatf/xmodem.c **** 		p = xbuff;
 131:../freeRTOS750/lib_fatf/xmodem.c **** 		*p++ = c;
 382               	.LM33:
 383 0154 8983      		std Y+1,r24
 384 0156 9E01      		movw r18,r28
 385 0158 2E5F      		subi r18,-2
 386 015a 3F4F      		sbci r19,-1
 132:../freeRTOS750/lib_fatf/xmodem.c **** 		for (i = 0;  i < (bufsz+(crc?1:0)+3); ++i) {
 388               	.LM34:
 389 015c A101      		movw r20,r2
 390 015e 4D5F      		subi r20,-3
 391 0160 5F4F      		sbci r21,-1
 392 0162 00C0      		rjmp .L17
 393               	.L19:
 394               	.LBB18:
 133:../freeRTOS750/lib_fatf/xmodem.c **** 			if ((c = _inbyte(DLY_1S)) < 0) goto reject;
 396               	.LM35:
 397 0164 88EE      		ldi r24,lo8(-24)
 398 0166 93E0      		ldi r25,lo8(3)
 399 0168 C45F      		subi r28,lo8(-1036)
 400 016a DB4F      		sbci r29,hi8(-1036)
 401 016c 2883      		st Y,r18
 402 016e CC50      		subi r28,lo8(1036)
 403 0170 D440      		sbci r29,hi8(1036)
 404 0172 C75F      		subi r28,lo8(-1033)
 405 0174 DB4F      		sbci r29,hi8(-1033)
 406 0176 3883      		st Y,r19
 407 0178 C950      		subi r28,lo8(1033)
 408 017a D440      		sbci r29,hi8(1033)
 409 017c C65F      		subi r28,lo8(-1034)
 410 017e DB4F      		sbci r29,hi8(-1034)
 411 0180 4883      		st Y,r20
 412 0182 CA50      		subi r28,lo8(1034)
 413 0184 D440      		sbci r29,hi8(1034)
 414 0186 C55F      		subi r28,lo8(-1035)
 415 0188 DB4F      		sbci r29,hi8(-1035)
 416 018a 5883      		st Y,r21
 417 018c CB50      		subi r28,lo8(1035)
 418 018e D440      		sbci r29,hi8(1035)
 419 0190 0E94 0000 		call _inbyte
 420               	.LBE18:
 134:../freeRTOS750/lib_fatf/xmodem.c **** 			*p++ = c;
 422               	.LM36:
 423 0194 C45F      		subi r28,lo8(-1036)
 424 0196 DB4F      		sbci r29,hi8(-1036)
 425 0198 2881      		ld r18,Y
 426 019a CC50      		subi r28,lo8(1036)
 427 019c D440      		sbci r29,hi8(1036)
 428 019e C75F      		subi r28,lo8(-1033)
 429 01a0 DB4F      		sbci r29,hi8(-1033)
 430 01a2 3881      		ld r19,Y
 431 01a4 C950      		subi r28,lo8(1033)
 432 01a6 D440      		sbci r29,hi8(1033)
 433 01a8 F901      		movw r30,r18
 434 01aa 8193      		st Z+,r24
 435 01ac 9F01      		movw r18,r30
 436 01ae C55F      		subi r28,lo8(-1035)
 437 01b0 DB4F      		sbci r29,hi8(-1035)
 438 01b2 5881      		ld r21,Y
 439 01b4 CB50      		subi r28,lo8(1035)
 440 01b6 D440      		sbci r29,hi8(1035)
 441 01b8 C65F      		subi r28,lo8(-1034)
 442 01ba DB4F      		sbci r29,hi8(-1034)
 443 01bc 4881      		ld r20,Y
 444 01be CA50      		subi r28,lo8(1034)
 445 01c0 D440      		sbci r29,hi8(1034)
 446               	.L17:
 132:../freeRTOS750/lib_fatf/xmodem.c **** 		for (i = 0;  i < (bufsz+(crc?1:0)+3); ++i) {
 448               	.LM37:
 449 01c2 E1E0      		ldi r30,lo8(1)
 450 01c4 6114      		cp r6,__zero_reg__
 451 01c6 7104      		cpc r7,__zero_reg__
 452 01c8 01F4      		brne .L18
 453 01ca E0E0      		ldi r30,0
 454               	.L18:
  83:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemReceive(uint8_t *dest, uint16_t dest_size)
 456               	.LM38:
 457 01cc B901      		movw r22,r18
 458 01ce 6C0D      		add r22,r12
 459 01d0 7D1D      		adc r23,r13
 132:../freeRTOS750/lib_fatf/xmodem.c **** 		for (i = 0;  i < (bufsz+(crc?1:0)+3); ++i) {
 461               	.LM39:
 462 01d2 CA01      		movw r24,r20
 463 01d4 8E0F      		add r24,r30
 464 01d6 911D      		adc r25,__zero_reg__
 465 01d8 6817      		cp r22,r24
 466 01da 7907      		cpc r23,r25
 467 01dc 00F0      		brlo .L19
 135:../freeRTOS750/lib_fatf/xmodem.c **** 		}
 136:../freeRTOS750/lib_fatf/xmodem.c **** 
 137:../freeRTOS750/lib_fatf/xmodem.c **** 		if (xbuff[1] == (uint8_t)(~xbuff[2]) &&
 469               	.LM40:
 470 01de 2A81      		ldd r18,Y+2
 471 01e0 8B81      		ldd r24,Y+3
 472 01e2 8095      		com r24
 473 01e4 2813      		cpse r18,r24
 474 01e6 00C0      		rjmp .L20
 476               	.LM41:
 477 01e8 2515      		cp r18,r5
 478 01ea 01F0      		breq .L21
 138:../freeRTOS750/lib_fatf/xmodem.c **** 			(xbuff[1] == packetno || xbuff[1] == (uint8_t)packetno-1) &&
 480               	.LM42:
 481 01ec 30E0      		ldi r19,0
 482 01ee 852D      		mov r24,r5
 483 01f0 90E0      		ldi r25,0
 484 01f2 0197      		sbiw r24,1
 485 01f4 2817      		cp r18,r24
 486 01f6 3907      		cpc r19,r25
 487 01f8 01F0      		breq .+2
 488 01fa 00C0      		rjmp .L20
 489               	.L21:
 490               	.LBB19:
 491               	.LBB20:
  58:../freeRTOS750/lib_fatf/xmodem.c **** 	if (crc) {
 493               	.LM43:
 494 01fc EE23      		tst r30
 495 01fe 01F0      		breq .L22
 496               	.LBB21:
  59:../freeRTOS750/lib_fatf/xmodem.c **** 		uint16_t crc = crc16_ccitt(buf, sz);
 498               	.LM44:
 499 0200 B101      		movw r22,r2
 500 0202 C801      		movw r24,r16
 501 0204 0E94 0000 		call crc16_ccitt
  60:../freeRTOS750/lib_fatf/xmodem.c **** 		uint16_t tcrc = (buf[sz]<<8)+buf[sz+1];
 503               	.LM45:
 504 0208 F801      		movw r30,r16
 505 020a E20D      		add r30,r2
 506 020c F31D      		adc r31,r3
 507 020e 2081      		ld r18,Z
 508 0210 C85F      		subi r28,lo8(-1032)
 509 0212 DB4F      		sbci r29,hi8(-1032)
 510 0214 2883      		st Y,r18
 511 0216 C850      		subi r28,lo8(1032)
 512 0218 D440      		sbci r29,hi8(1032)
 513 021a C95F      		subi r28,lo8(-1031)
 514 021c DB4F      		sbci r29,hi8(-1031)
 515 021e 1882      		st Y,__zero_reg__
 516 0220 C750      		subi r28,lo8(1031)
 517 0222 D440      		sbci r29,hi8(1031)
 518 0224 E5E0      		ldi r30,lo8(5)
 519 0226 F0E0      		ldi r31,0
 520 0228 EC0F      		add r30,r28
 521 022a FD1F      		adc r31,r29
 522 022c E20D      		add r30,r2
 523 022e F31D      		adc r31,r3
 524 0230 2081      		ld r18,Z
 525 0232 C95F      		subi r28,lo8(-1031)
 526 0234 DB4F      		sbci r29,hi8(-1031)
 527 0236 4881      		ld r20,Y
 528 0238 5981      		ldd r21,Y+1
 529 023a C750      		subi r28,lo8(1031)
 530 023c D440      		sbci r29,hi8(1031)
 531 023e 420F      		add r20,r18
 532 0240 511D      		adc r21,__zero_reg__
  61:../freeRTOS750/lib_fatf/xmodem.c **** 		if (crc == tcrc)
 534               	.LM46:
 535 0242 8417      		cp r24,r20
 536 0244 9507      		cpc r25,r21
 537 0246 01F0      		breq .+2
 538 0248 00C0      		rjmp .L20
 539 024a 00C0      		rjmp .L23
 540               	.L22:
 139:../freeRTOS750/lib_fatf/xmodem.c **** 			check(crc, &xbuff[3], bufsz)) {
 542               	.LM47:
 543 024c F801      		movw r30,r16
 544               	.LBE21:
  58:../freeRTOS750/lib_fatf/xmodem.c **** 	if (crc) {
 546               	.LM48:
 547 024e 20E0      		ldi r18,0
 548 0250 80E0      		ldi r24,0
 549 0252 90E0      		ldi r25,0
 550               	.L25:
 551               	.LBB22:
  68:../freeRTOS750/lib_fatf/xmodem.c **** 			cks += buf[i];
 553               	.LM49:
 554 0254 3191      		ld r19,Z+
 555 0256 230F      		add r18,r19
  67:../freeRTOS750/lib_fatf/xmodem.c **** 		for (i = 0; i < sz; ++i) {
 557               	.LM50:
 558 0258 0196      		adiw r24,1
 559 025a 8215      		cp r24,r2
 560 025c 9305      		cpc r25,r3
 561 025e 04F0      		brlt .L25
  70:../freeRTOS750/lib_fatf/xmodem.c **** 		if (cks == buf[sz])
 563               	.LM51:
 564 0260 F801      		movw r30,r16
 565 0262 E20D      		add r30,r2
 566 0264 F31D      		adc r31,r3
 567 0266 8081      		ld r24,Z
 568 0268 2813      		cpse r18,r24
 569 026a 00C0      		rjmp .L20
 570 026c 00C0      		rjmp .L23
 571               	.L29:
 572               	.LBE22:
 573               	.LBE20:
 574               	.LBE19:
 575               	.LBB23:
 140:../freeRTOS750/lib_fatf/xmodem.c **** 			if (xbuff[1] == packetno)	{
 141:../freeRTOS750/lib_fatf/xmodem.c **** 				uint16_t count = dest_size - len;
 577               	.LM52:
 578 026e 2401      		movw r4,r8
 579 0270 4E18      		sub r4,r14
 580 0272 5F08      		sbc r5,r15
 142:../freeRTOS750/lib_fatf/xmodem.c **** 				if (count > bufsz) count = bufsz;
 582               	.LM53:
 583 0274 2414      		cp r2,r4
 584 0276 3504      		cpc r3,r5
 585 0278 00F0      		brlo .L34
 143:../freeRTOS750/lib_fatf/xmodem.c **** 				if (count > 0) {
 587               	.LM54:
 588 027a 4114      		cp r4,__zero_reg__
 589 027c 5104      		cpc r5,__zero_reg__
 590 027e 01F0      		breq .L27
 591 0280 00C0      		rjmp .L26
 592               	.L34:
 142:../freeRTOS750/lib_fatf/xmodem.c **** 				if (count > bufsz) count = bufsz;
 594               	.LM55:
 595 0282 2101      		movw r4,r2
 596               	.L26:
 144:../freeRTOS750/lib_fatf/xmodem.c **** 					memcpy (&dest[len], &xbuff[3], count);
 598               	.LM56:
 599 0284 F501      		movw r30,r10
 600 0286 EE0D      		add r30,r14
 601 0288 FF1D      		adc r31,r15
 602 028a A201      		movw r20,r4
 603 028c B801      		movw r22,r16
 604 028e CF01      		movw r24,r30
 605 0290 C45F      		subi r28,lo8(-1036)
 606 0292 DB4F      		sbci r29,hi8(-1036)
 607 0294 2883      		st Y,r18
 608 0296 CC50      		subi r28,lo8(1036)
 609 0298 D440      		sbci r29,hi8(1036)
 610 029a 0E94 0000 		call memcpy
 145:../freeRTOS750/lib_fatf/xmodem.c **** 					len += count;
 612               	.LM57:
 613 029e E40C      		add r14,r4
 614 02a0 F51C      		adc r15,r5
 615 02a2 C45F      		subi r28,lo8(-1036)
 616 02a4 DB4F      		sbci r29,hi8(-1036)
 617 02a6 2881      		ld r18,Y
 618 02a8 CC50      		subi r28,lo8(1036)
 619 02aa D440      		sbci r29,hi8(1036)
 620               	.L27:
 146:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 147:../freeRTOS750/lib_fatf/xmodem.c **** 				++packetno;
 622               	.LM58:
 623 02ac 522E      		mov r5,r18
 624 02ae 5394      		inc r5
 148:../freeRTOS750/lib_fatf/xmodem.c **** 				retrans = MAXRETRANS+1;
 626               	.LM59:
 627 02b0 8AE1      		ldi r24,lo8(26)
 628 02b2 482E      		mov r4,r24
 629               	.L30:
 630               	.LBE23:
 149:../freeRTOS750/lib_fatf/xmodem.c **** 			}
 150:../freeRTOS750/lib_fatf/xmodem.c **** 			if (--retrans <= 0) {
 632               	.LM60:
 633 02b4 4A94      		dec r4
 634 02b6 01F4      		brne .L28
 151:../freeRTOS750/lib_fatf/xmodem.c **** 				flushinput();
 636               	.LM61:
 637 02b8 0E94 0000 		call flushinput
 152:../freeRTOS750/lib_fatf/xmodem.c **** 				_outbyte(CAN);
 639               	.LM62:
 640 02bc 88E1      		ldi r24,lo8(24)
 641 02be 90E0      		ldi r25,0
 642 02c0 0E94 0000 		call _outbyte
 153:../freeRTOS750/lib_fatf/xmodem.c **** 				_outbyte(CAN);
 644               	.LM63:
 645 02c4 88E1      		ldi r24,lo8(24)
 646 02c6 90E0      		ldi r25,0
 647 02c8 0E94 0000 		call _outbyte
 154:../freeRTOS750/lib_fatf/xmodem.c **** 				_outbyte(CAN);
 649               	.LM64:
 650 02cc 88E1      		ldi r24,lo8(24)
 651 02ce 90E0      		ldi r25,0
 652 02d0 0E94 0000 		call _outbyte
 155:../freeRTOS750/lib_fatf/xmodem.c **** 				return -3; /* too many retry error */
 654               	.LM65:
 655 02d4 8DEF      		ldi r24,lo8(-3)
 656 02d6 00C0      		rjmp .L44
 657               	.L28:
 156:../freeRTOS750/lib_fatf/xmodem.c **** 			}
 157:../freeRTOS750/lib_fatf/xmodem.c **** 			_outbyte(ACK);
 659               	.LM66:
 660 02d8 86E0      		ldi r24,lo8(6)
 661 02da 90E0      		ldi r25,0
 662 02dc 00C0      		rjmp .L45
 663               	.L20:
 158:../freeRTOS750/lib_fatf/xmodem.c **** 			continue;
 159:../freeRTOS750/lib_fatf/xmodem.c **** 		}
 160:../freeRTOS750/lib_fatf/xmodem.c **** 	reject:
 161:../freeRTOS750/lib_fatf/xmodem.c **** 		flushinput();
 665               	.LM67:
 666 02de 0E94 0000 		call flushinput
 162:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(NAK);
 668               	.LM68:
 669 02e2 85E1      		ldi r24,lo8(21)
 670 02e4 90E0      		ldi r25,0
 671               	.L45:
 672 02e6 0E94 0000 		call _outbyte
 129:../freeRTOS750/lib_fatf/xmodem.c **** 		trychar = 0;
 674               	.LM69:
 675 02ea 20E0      		ldi r18,0
 676 02ec 00C0      		rjmp .L43
 677               	.L23:
 140:../freeRTOS750/lib_fatf/xmodem.c **** 			if (xbuff[1] == packetno)	{
 679               	.LM70:
 680 02ee 2A81      		ldd r18,Y+2
 681 02f0 2511      		cpse r18,r5
 682 02f2 00C0      		rjmp .L30
 683 02f4 00C0      		rjmp .L29
 684               	.L44:
 685               	/* epilogue start */
 686               	.LBE13:
 163:../freeRTOS750/lib_fatf/xmodem.c **** 	}
 164:../freeRTOS750/lib_fatf/xmodem.c **** }
 688               	.LM71:
 689 02f6 C45F      		subi r28,-12
 690 02f8 DB4F      		sbci r29,-5
 691 02fa 0FB6      		in __tmp_reg__,__SREG__
 692 02fc F894      		cli
 693 02fe DEBF      		out __SP_H__,r29
 694 0300 0FBE      		out __SREG__,__tmp_reg__
 695 0302 CDBF      		out __SP_L__,r28
 696 0304 DF91      		pop r29
 697 0306 CF91      		pop r28
 698 0308 1F91      		pop r17
 699 030a 0F91      		pop r16
 700 030c FF90      		pop r15
 701 030e EF90      		pop r14
 702 0310 DF90      		pop r13
 703 0312 CF90      		pop r12
 704 0314 BF90      		pop r11
 705 0316 AF90      		pop r10
 706 0318 9F90      		pop r9
 707 031a 8F90      		pop r8
 708 031c 7F90      		pop r7
 709 031e 6F90      		pop r6
 710 0320 5F90      		pop r5
 711 0322 4F90      		pop r4
 712 0324 3F90      		pop r3
 713 0326 2F90      		pop r2
 714 0328 0895      		ret
 733               	.Lscope2:
 735               		.stabd	78,0,0
 739               	.global	xmodemTransmit
 741               	xmodemTransmit:
 742               		.stabd	46,0,0
 165:../freeRTOS750/lib_fatf/xmodem.c **** 
 166:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemTransmit(uint8_t *src, uint16_t src_size)
 167:../freeRTOS750/lib_fatf/xmodem.c **** {
 744               	.LM72:
 745               	.LFBB3:
 746 032a 2F92      		push r2
 747 032c 3F92      		push r3
 748 032e 4F92      		push r4
 749 0330 5F92      		push r5
 750 0332 6F92      		push r6
 751 0334 7F92      		push r7
 752 0336 8F92      		push r8
 753 0338 9F92      		push r9
 754 033a AF92      		push r10
 755 033c BF92      		push r11
 756 033e CF92      		push r12
 757 0340 DF92      		push r13
 758 0342 EF92      		push r14
 759 0344 FF92      		push r15
 760 0346 0F93      		push r16
 761 0348 1F93      		push r17
 762 034a CF93      		push r28
 763 034c DF93      		push r29
 764 034e CDB7      		in r28,__SP_L__
 765 0350 DEB7      		in r29,__SP_H__
 766 0352 CA50      		subi r28,10
 767 0354 D440      		sbci r29,4
 768 0356 0FB6      		in __tmp_reg__,__SREG__
 769 0358 F894      		cli
 770 035a DEBF      		out __SP_H__,r29
 771 035c 0FBE      		out __SREG__,__tmp_reg__
 772 035e CDBF      		out __SP_L__,r28
 773               	/* prologue: function */
 774               	/* frame size = 1034 */
 775               	/* stack size = 1052 */
 776               	.L__stack_usage = 1052
 777 0360 3C01      		movw r6,r24
 778 0362 7B01      		movw r14,r22
 780               	.LM73:
 781 0364 10E1      		ldi r17,lo8(16)
 782               	.L54:
 783               	.LBB24:
 784               	.LBB25:
 168:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t xbuff[1030]; /* 1024 for XModem 1k + 3 head chars + 2 crc + nul */
 169:../freeRTOS750/lib_fatf/xmodem.c **** 	int16_t bufsz, crc = -1;
 170:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t packetno = 1;
 171:../freeRTOS750/lib_fatf/xmodem.c **** 	int i, c, len = 0;
 172:../freeRTOS750/lib_fatf/xmodem.c **** 	uint8_t retry;
 173:../freeRTOS750/lib_fatf/xmodem.c **** 
 174:../freeRTOS750/lib_fatf/xmodem.c **** 	for(;;) {
 175:../freeRTOS750/lib_fatf/xmodem.c **** 		for( retry = 0; retry < 16; ++retry) {
 176:../freeRTOS750/lib_fatf/xmodem.c **** 			if ((c = _inbyte((DLY_1S)<<1)) >= 0) {
 786               	.LM74:
 787 0366 80ED      		ldi r24,lo8(-48)
 788 0368 97E0      		ldi r25,lo8(7)
 789 036a 0E94 0000 		call _inbyte
 790 036e 97FD      		sbrc r25,7
 791 0370 00C0      		rjmp .L48
 177:../freeRTOS750/lib_fatf/xmodem.c **** 				switch (c) {
 793               	.LM75:
 794 0372 8831      		cpi r24,24
 795 0374 9105      		cpc r25,__zero_reg__
 796 0376 01F0      		breq .L50
 797 0378 8334      		cpi r24,67
 798 037a 9105      		cpc r25,__zero_reg__
 799 037c 01F0      		breq .L51
 800 037e 4597      		sbiw r24,21
 801 0380 01F4      		brne .L48
 802 0382 00C0      		rjmp .L72
 803               	.L51:
 178:../freeRTOS750/lib_fatf/xmodem.c **** 				case 'C':
 179:../freeRTOS750/lib_fatf/xmodem.c **** 					crc = 1;
 805               	.LM76:
 806 0384 AA24      		clr r10
 807 0386 A394      		inc r10
 808 0388 B12C      		mov r11,__zero_reg__
 809 038a 00C0      		rjmp .L49
 810               	.L72:
 180:../freeRTOS750/lib_fatf/xmodem.c **** 					goto start_trans;
 181:../freeRTOS750/lib_fatf/xmodem.c **** 				case NAK:
 182:../freeRTOS750/lib_fatf/xmodem.c **** 					crc = 0;
 812               	.LM77:
 813 038c A12C      		mov r10,__zero_reg__
 814 038e B12C      		mov r11,__zero_reg__
 815               	.L49:
 816 0390 C12C      		mov r12,__zero_reg__
 817 0392 D12C      		mov r13,__zero_reg__
 818 0394 21E0      		ldi r18,lo8(1)
 819 0396 C95F      		subi r28,lo8(-1031)
 820 0398 DB4F      		sbci r29,hi8(-1031)
 821 039a 2883      		st Y,r18
 822 039c C750      		subi r28,lo8(1031)
 823 039e D440      		sbci r29,hi8(1031)
 824               	.LBE25:
 183:../freeRTOS750/lib_fatf/xmodem.c **** 					goto start_trans;
 184:../freeRTOS750/lib_fatf/xmodem.c **** 				case CAN:
 185:../freeRTOS750/lib_fatf/xmodem.c **** 					if ((c = _inbyte(DLY_1S)) == CAN) {
 186:../freeRTOS750/lib_fatf/xmodem.c **** 						_outbyte(ACK);
 187:../freeRTOS750/lib_fatf/xmodem.c **** 						flushinput();
 188:../freeRTOS750/lib_fatf/xmodem.c **** 						return -1; /* cancelled by remote */
 189:../freeRTOS750/lib_fatf/xmodem.c **** 					}
 190:../freeRTOS750/lib_fatf/xmodem.c **** 					break;
 191:../freeRTOS750/lib_fatf/xmodem.c **** 				default:
 192:../freeRTOS750/lib_fatf/xmodem.c **** 					break;
 193:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 194:../freeRTOS750/lib_fatf/xmodem.c **** 			}
 195:../freeRTOS750/lib_fatf/xmodem.c **** 		}
 196:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 197:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 198:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 199:../freeRTOS750/lib_fatf/xmodem.c **** 		flushinput();
 200:../freeRTOS750/lib_fatf/xmodem.c **** 		return -2; /* no sync */
 201:../freeRTOS750/lib_fatf/xmodem.c **** 
 202:../freeRTOS750/lib_fatf/xmodem.c **** 		for(;;) {
 203:../freeRTOS750/lib_fatf/xmodem.c **** 		start_trans:
 204:../freeRTOS750/lib_fatf/xmodem.c **** 			xbuff[0] = SOH; bufsz = 128;
 205:../freeRTOS750/lib_fatf/xmodem.c **** 			xbuff[1] = packetno;
 206:../freeRTOS750/lib_fatf/xmodem.c **** 			xbuff[2] = ~packetno;
 207:../freeRTOS750/lib_fatf/xmodem.c **** 			c = src_size - len;
 208:../freeRTOS750/lib_fatf/xmodem.c **** 			if (c > bufsz) c = bufsz;
 209:../freeRTOS750/lib_fatf/xmodem.c **** 			if (c >= 0) {
 210:../freeRTOS750/lib_fatf/xmodem.c **** 				memset (&xbuff[3], 0, bufsz);
 826               	.LM78:
 827 03a0 8E01      		movw r16,r28
 828 03a2 0C5F      		subi r16,-4
 829 03a4 1F4F      		sbci r17,-1
 830 03a6 A4E8      		ldi r26,lo8(-124)
 831 03a8 8A2E      		mov r8,r26
 832 03aa 912C      		mov r9,__zero_reg__
 833 03ac 8C0E      		add r8,r28
 834 03ae 9D1E      		adc r9,r29
 835 03b0 4424      		clr r4
 836 03b2 4394      		inc r4
 837 03b4 512C      		mov r5,__zero_reg__
 838 03b6 4C0E      		add r4,r28
 839 03b8 5D1E      		adc r5,r29
 211:../freeRTOS750/lib_fatf/xmodem.c **** 				if (c == 0) {
 212:../freeRTOS750/lib_fatf/xmodem.c **** 					xbuff[3] = CTRLZ;
 213:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 214:../freeRTOS750/lib_fatf/xmodem.c **** 				else {
 215:../freeRTOS750/lib_fatf/xmodem.c **** 					memcpy (&xbuff[3], &src[len], c);
 216:../freeRTOS750/lib_fatf/xmodem.c **** 					if (c < bufsz) xbuff[3+c] = CTRLZ;
 217:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 218:../freeRTOS750/lib_fatf/xmodem.c **** 				if (crc) {
 219:../freeRTOS750/lib_fatf/xmodem.c **** 					uint16_t ccrc = crc16_ccitt(&xbuff[3], bufsz);
 220:../freeRTOS750/lib_fatf/xmodem.c **** 					xbuff[bufsz+3] = (ccrc>>8) & 0xFF;
 221:../freeRTOS750/lib_fatf/xmodem.c **** 					xbuff[bufsz+4] = ccrc & 0xFF;
 222:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 223:../freeRTOS750/lib_fatf/xmodem.c **** 				else {
 224:../freeRTOS750/lib_fatf/xmodem.c **** 					uint8_t ccks = 0;
 225:../freeRTOS750/lib_fatf/xmodem.c **** 					for (i = 3; i < bufsz+3; ++i) {
 226:../freeRTOS750/lib_fatf/xmodem.c **** 						ccks += xbuff[i];
 227:../freeRTOS750/lib_fatf/xmodem.c **** 					}
 228:../freeRTOS750/lib_fatf/xmodem.c **** 					xbuff[bufsz+3] = ccks;
 229:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 230:../freeRTOS750/lib_fatf/xmodem.c **** 				for (retry = 0; retry < MAXRETRANS; ++retry) {
 231:../freeRTOS750/lib_fatf/xmodem.c **** 					for (i = 0; i < bufsz+4+(crc?1:0); ++i) {
 841               	.LM79:
 842 03ba 9501      		movw r18,r10
 843 03bc 2C57      		subi r18,124
 844 03be 3F4F      		sbci r19,-1
 845 03c0 C75F      		subi r28,lo8(-1033)
 846 03c2 DB4F      		sbci r29,hi8(-1033)
 847 03c4 3983      		std Y+1,r19
 848 03c6 2883      		st Y,r18
 849 03c8 C950      		subi r28,lo8(1033)
 850 03ca D440      		sbci r29,hi8(1033)
 851 03cc 00C0      		rjmp .L52
 852               	.L50:
 853               	.LBB27:
 185:../freeRTOS750/lib_fatf/xmodem.c **** 					if ((c = _inbyte(DLY_1S)) == CAN) {
 855               	.LM80:
 856 03ce 88EE      		ldi r24,lo8(-24)
 857 03d0 93E0      		ldi r25,lo8(3)
 858 03d2 0E94 0000 		call _inbyte
 859 03d6 4897      		sbiw r24,24
 860 03d8 01F4      		brne .L48
 861               	.L68:
 862               	.LBB26:
 186:../freeRTOS750/lib_fatf/xmodem.c **** 						_outbyte(ACK);
 864               	.LM81:
 865 03da 86E0      		ldi r24,lo8(6)
 866 03dc 90E0      		ldi r25,0
 867 03de 0E94 0000 		call _outbyte
 187:../freeRTOS750/lib_fatf/xmodem.c **** 						flushinput();
 869               	.LM82:
 870 03e2 0E94 0000 		call flushinput
 188:../freeRTOS750/lib_fatf/xmodem.c **** 						return -1; /* cancelled by remote */
 872               	.LM83:
 873 03e6 8FEF      		ldi r24,lo8(-1)
 874 03e8 00C0      		rjmp .L53
 875               	.L48:
 876 03ea 1150      		subi r17,lo8(-(-1))
 877               	.LBE26:
 878               	.LBE27:
 175:../freeRTOS750/lib_fatf/xmodem.c **** 		for( retry = 0; retry < 16; ++retry) {
 880               	.LM84:
 881 03ec 01F0      		breq .+2
 882 03ee 00C0      		rjmp .L54
 196:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 884               	.LM85:
 885 03f0 88E1      		ldi r24,lo8(24)
 886 03f2 90E0      		ldi r25,0
 887 03f4 0E94 0000 		call _outbyte
 197:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 889               	.LM86:
 890 03f8 88E1      		ldi r24,lo8(24)
 891 03fa 90E0      		ldi r25,0
 892 03fc 0E94 0000 		call _outbyte
 198:../freeRTOS750/lib_fatf/xmodem.c **** 		_outbyte(CAN);
 894               	.LM87:
 895 0400 88E1      		ldi r24,lo8(24)
 896 0402 90E0      		ldi r25,0
 897 0404 0E94 0000 		call _outbyte
 199:../freeRTOS750/lib_fatf/xmodem.c **** 		flushinput();
 899               	.LM88:
 900 0408 0E94 0000 		call flushinput
 200:../freeRTOS750/lib_fatf/xmodem.c **** 		return -2; /* no sync */
 902               	.LM89:
 903 040c 8EEF      		ldi r24,lo8(-2)
 904 040e 00C0      		rjmp .L53
 905               	.L52:
 204:../freeRTOS750/lib_fatf/xmodem.c **** 			xbuff[0] = SOH; bufsz = 128;
 907               	.LM90:
 908 0410 31E0      		ldi r19,lo8(1)
 909 0412 3983      		std Y+1,r19
 205:../freeRTOS750/lib_fatf/xmodem.c **** 			xbuff[1] = packetno;
 911               	.LM91:
 912 0414 C95F      		subi r28,lo8(-1031)
 913 0416 DB4F      		sbci r29,hi8(-1031)
 914 0418 2881      		ld r18,Y
 915 041a C750      		subi r28,lo8(1031)
 916 041c D440      		sbci r29,hi8(1031)
 917 041e 2A83      		std Y+2,r18
 166:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemTransmit(uint8_t *src, uint16_t src_size)
 919               	.LM92:
 920 0420 822F      		mov r24,r18
 921 0422 8095      		com r24
 206:../freeRTOS750/lib_fatf/xmodem.c **** 			xbuff[2] = ~packetno;
 923               	.LM93:
 924 0424 8B83      		std Y+3,r24
 207:../freeRTOS750/lib_fatf/xmodem.c **** 			c = src_size - len;
 926               	.LM94:
 927 0426 1701      		movw r2,r14
 208:../freeRTOS750/lib_fatf/xmodem.c **** 			if (c > bufsz) c = bufsz;
 929               	.LM95:
 930 0428 31E8      		ldi r19,-127
 931 042a E316      		cp r14,r19
 932 042c F104      		cpc r15,__zero_reg__
 933 042e 04F4      		brge .L73
 209:../freeRTOS750/lib_fatf/xmodem.c **** 			if (c >= 0) {
 935               	.LM96:
 936 0430 F7FE      		sbrs r15,7
 937 0432 00C0      		rjmp .L55
 209:../freeRTOS750/lib_fatf/xmodem.c **** 			if (c >= 0) {
 939               	.LM97:
 940 0434 FAE0      		ldi r31,lo8(10)
 941 0436 FF2E      		mov r15,r31
 942 0438 00C0      		rjmp .L56
 943               	.L73:
 208:../freeRTOS750/lib_fatf/xmodem.c **** 			if (c > bufsz) c = bufsz;
 945               	.LM98:
 946 043a E0E8      		ldi r30,lo8(-128)
 947 043c 2E2E      		mov r2,r30
 948 043e 312C      		mov r3,__zero_reg__
 949               	.L55:
 210:../freeRTOS750/lib_fatf/xmodem.c **** 				memset (&xbuff[3], 0, bufsz);
 951               	.LM99:
 952 0440 F801      		movw r30,r16
 953 0442 20E8      		ldi r18,lo8(-128)
 954               		0:
 955 0444 1192      		st Z+,__zero_reg__
 956 0446 2A95      		dec r18
 957 0448 01F4      		brne 0b
 211:../freeRTOS750/lib_fatf/xmodem.c **** 				if (c == 0) {
 959               	.LM100:
 960 044a 2114      		cp r2,__zero_reg__
 961 044c 3104      		cpc r3,__zero_reg__
 962 044e 01F4      		brne .L57
 212:../freeRTOS750/lib_fatf/xmodem.c **** 					xbuff[3] = CTRLZ;
 964               	.LM101:
 965 0450 8AE1      		ldi r24,lo8(26)
 966 0452 8C83      		std Y+4,r24
 967 0454 00C0      		rjmp .L58
 968               	.L57:
 166:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemTransmit(uint8_t *src, uint16_t src_size)
 970               	.LM102:
 971 0456 C301      		movw r24,r6
 972 0458 8C0D      		add r24,r12
 973 045a 9D1D      		adc r25,r13
 215:../freeRTOS750/lib_fatf/xmodem.c **** 					memcpy (&xbuff[3], &src[len], c);
 975               	.LM103:
 976 045c A101      		movw r20,r2
 977 045e BC01      		movw r22,r24
 978 0460 C801      		movw r24,r16
 979 0462 0E94 0000 		call memcpy
 216:../freeRTOS750/lib_fatf/xmodem.c **** 					if (c < bufsz) xbuff[3+c] = CTRLZ;
 981               	.LM104:
 982 0466 30E8      		ldi r19,-128
 983 0468 2316      		cp r2,r19
 984 046a 3104      		cpc r3,__zero_reg__
 985 046c 01F0      		breq .L58
 216:../freeRTOS750/lib_fatf/xmodem.c **** 					if (c < bufsz) xbuff[3+c] = CTRLZ;
 987               	.LM105:
 988 046e F801      		movw r30,r16
 989 0470 E20D      		add r30,r2
 990 0472 F31D      		adc r31,r3
 991 0474 8AE1      		ldi r24,lo8(26)
 992 0476 8083      		st Z,r24
 993               	.L58:
 218:../freeRTOS750/lib_fatf/xmodem.c **** 				if (crc) {
 995               	.LM106:
 996 0478 A114      		cp r10,__zero_reg__
 997 047a B104      		cpc r11,__zero_reg__
 998 047c 01F0      		breq .L59
 999               	.LBB28:
 219:../freeRTOS750/lib_fatf/xmodem.c **** 					uint16_t ccrc = crc16_ccitt(&xbuff[3], bufsz);
 1001               	.LM107:
 1002 047e 60E8      		ldi r22,lo8(-128)
 1003 0480 70E0      		ldi r23,0
 1004 0482 C801      		movw r24,r16
 1005 0484 0E94 0000 		call crc16_ccitt
 220:../freeRTOS750/lib_fatf/xmodem.c **** 					xbuff[bufsz+3] = (ccrc>>8) & 0xFF;
 1007               	.LM108:
 1008 0488 F401      		movw r30,r8
 1009 048a 9083      		st Z,r25
 221:../freeRTOS750/lib_fatf/xmodem.c **** 					xbuff[bufsz+4] = ccrc & 0xFF;
 1011               	.LM109:
 1012 048c CB57      		subi r28,lo8(-133)
 1013 048e DF4F      		sbci r29,hi8(-133)
 1014 0490 8883      		st Y,r24
 1015 0492 C558      		subi r28,lo8(133)
 1016 0494 D040      		sbci r29,hi8(133)
 1017 0496 00C0      		rjmp .L60
 1018               	.L59:
 1019 0498 F801      		movw r30,r16
 1020               	.LBE28:
 166:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemTransmit(uint8_t *src, uint16_t src_size)
 1022               	.LM110:
 1023 049a 80E0      		ldi r24,0
 1024               	.L61:
 1025               	.LBB29:
 226:../freeRTOS750/lib_fatf/xmodem.c **** 						ccks += xbuff[i];
 1027               	.LM111:
 1028 049c 9191      		ld r25,Z+
 1029 049e 890F      		add r24,r25
 225:../freeRTOS750/lib_fatf/xmodem.c **** 					for (i = 3; i < bufsz+3; ++i) {
 1031               	.LM112:
 1032 04a0 E815      		cp r30,r8
 1033 04a2 F905      		cpc r31,r9
 1034 04a4 01F4      		brne .L61
 228:../freeRTOS750/lib_fatf/xmodem.c **** 					xbuff[bufsz+3] = ccks;
 1036               	.LM113:
 1037 04a6 F401      		movw r30,r8
 1038 04a8 8083      		st Z,r24
 1039               	.L60:
 1040               	.LBE29:
 166:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemTransmit(uint8_t *src, uint16_t src_size)
 1042               	.LM114:
 1043 04aa 29E1      		ldi r18,lo8(25)
 1044 04ac C85F      		subi r28,lo8(-1032)
 1045 04ae DB4F      		sbci r29,hi8(-1032)
 1046 04b0 2883      		st Y,r18
 1047 04b2 C850      		subi r28,lo8(1032)
 1048 04b4 D440      		sbci r29,hi8(1032)
 1049 04b6 00C0      		rjmp .L62
 1050               	.L63:
 232:../freeRTOS750/lib_fatf/xmodem.c **** 						_outbyte(xbuff[i]);
 1052               	.LM115:
 1053 04b8 F101      		movw r30,r2
 1054 04ba 8191      		ld r24,Z+
 1055 04bc 1F01      		movw r2,r30
 1056 04be 90E0      		ldi r25,0
 1057 04c0 0E94 0000 		call _outbyte
 1058               	.L70:
 166:../freeRTOS750/lib_fatf/xmodem.c **** int8_t xmodemTransmit(uint8_t *src, uint16_t src_size)
 1060               	.LM116:
 1061 04c4 C101      		movw r24,r2
 1062 04c6 8419      		sub r24,r4
 1063 04c8 9509      		sbc r25,r5
 231:../freeRTOS750/lib_fatf/xmodem.c **** 					for (i = 0; i < bufsz+4+(crc?1:0); ++i) {
 1065               	.LM117:
 1066 04ca C75F      		subi r28,lo8(-1033)
 1067 04cc DB4F      		sbci r29,hi8(-1033)
 1068 04ce 2881      		ld r18,Y
 1069 04d0 3981      		ldd r19,Y+1
 1070 04d2 C950      		subi r28,lo8(1033)
 1071 04d4 D440      		sbci r29,hi8(1033)
 1072 04d6 8217      		cp r24,r18
 1073 04d8 9307      		cpc r25,r19
 1074 04da 04F0      		brlt .L63
 1075               	.LBB30:
 233:../freeRTOS750/lib_fatf/xmodem.c **** 					}
 234:../freeRTOS750/lib_fatf/xmodem.c **** 					if ((c = _inbyte(DLY_1S)) >= 0 ) {
 1077               	.LM118:
 1078 04dc 88EE      		ldi r24,lo8(-24)
 1079 04de 93E0      		ldi r25,lo8(3)
 1080 04e0 0E94 0000 		call _inbyte
 1081 04e4 97FD      		sbrc r25,7
 1082 04e6 00C0      		rjmp .L65
 235:../freeRTOS750/lib_fatf/xmodem.c **** 						switch (c) {
 1084               	.LM119:
 1085 04e8 8630      		cpi r24,6
 1086 04ea 9105      		cpc r25,__zero_reg__
 1087 04ec 01F0      		breq .L66
 1088 04ee 4897      		sbiw r24,24
 1089 04f0 01F4      		brne .L65
 1090 04f2 00C0      		rjmp .L67
 1091               	.L66:
 236:../freeRTOS750/lib_fatf/xmodem.c **** 						case ACK:
 237:../freeRTOS750/lib_fatf/xmodem.c **** 							++packetno;
 1093               	.LM120:
 1094 04f4 C95F      		subi r28,lo8(-1031)
 1095 04f6 DB4F      		sbci r29,hi8(-1031)
 1096 04f8 3881      		ld r19,Y
 1097 04fa C750      		subi r28,lo8(1031)
 1098 04fc D440      		sbci r29,hi8(1031)
 1099 04fe 3F5F      		subi r19,lo8(-(1))
 1100 0500 C95F      		subi r28,lo8(-1031)
 1101 0502 DB4F      		sbci r29,hi8(-1031)
 1102 0504 3883      		st Y,r19
 1103 0506 C750      		subi r28,lo8(1031)
 1104 0508 D440      		sbci r29,hi8(1031)
 238:../freeRTOS750/lib_fatf/xmodem.c **** 							len += bufsz;
 1106               	.LM121:
 1107 050a 80E8      		ldi r24,-128
 1108 050c C80E      		add r12,r24
 1109 050e D11C      		adc r13,__zero_reg__
 1110 0510 90E8      		ldi r25,-128
 1111 0512 E91A      		sub r14,r25
 1112 0514 F108      		sbc r15,__zero_reg__
 239:../freeRTOS750/lib_fatf/xmodem.c **** 							goto start_trans;
 1114               	.LM122:
 1115 0516 00C0      		rjmp .L52
 1116               	.L67:
 240:../freeRTOS750/lib_fatf/xmodem.c **** 						case CAN:
 241:../freeRTOS750/lib_fatf/xmodem.c **** 							if ((c = _inbyte(DLY_1S)) == CAN) {
 1118               	.LM123:
 1119 0518 88EE      		ldi r24,lo8(-24)
 1120 051a 93E0      		ldi r25,lo8(3)
 1121 051c 0E94 0000 		call _inbyte
 1122 0520 4897      		sbiw r24,24
 1123 0522 01F4      		brne .+2
 1124 0524 00C0      		rjmp .L68
 1125               	.L65:
 1126 0526 C85F      		subi r28,lo8(-1032)
 1127 0528 DB4F      		sbci r29,hi8(-1032)
 1128 052a 2881      		ld r18,Y
 1129 052c C850      		subi r28,lo8(1032)
 1130 052e D440      		sbci r29,hi8(1032)
 1131 0530 2150      		subi r18,lo8(-(-1))
 1132 0532 C85F      		subi r28,lo8(-1032)
 1133 0534 DB4F      		sbci r29,hi8(-1032)
 1134 0536 2883      		st Y,r18
 1135 0538 C850      		subi r28,lo8(1032)
 1136 053a D440      		sbci r29,hi8(1032)
 1137               	.LBE30:
 230:../freeRTOS750/lib_fatf/xmodem.c **** 				for (retry = 0; retry < MAXRETRANS; ++retry) {
 1139               	.LM124:
 1140 053c 2223      		tst r18
 1141 053e 01F0      		breq .L69
 1142               	.L62:
 1143 0540 1201      		movw r2,r4
 1144 0542 00C0      		rjmp .L70
 1145               	.L69:
 242:../freeRTOS750/lib_fatf/xmodem.c **** 								_outbyte(ACK);
 243:../freeRTOS750/lib_fatf/xmodem.c **** 								flushinput();
 244:../freeRTOS750/lib_fatf/xmodem.c **** 								return -1; /* cancelled by remote */
 245:../freeRTOS750/lib_fatf/xmodem.c **** 							}
 246:../freeRTOS750/lib_fatf/xmodem.c **** 							break;
 247:../freeRTOS750/lib_fatf/xmodem.c **** 						case NAK:
 248:../freeRTOS750/lib_fatf/xmodem.c **** 						default:
 249:../freeRTOS750/lib_fatf/xmodem.c **** 							break;
 250:../freeRTOS750/lib_fatf/xmodem.c **** 						}
 251:../freeRTOS750/lib_fatf/xmodem.c **** 					}
 252:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 253:../freeRTOS750/lib_fatf/xmodem.c **** 				_outbyte(CAN);
 1147               	.LM125:
 1148 0544 88E1      		ldi r24,lo8(24)
 1149 0546 90E0      		ldi r25,0
 1150 0548 0E94 0000 		call _outbyte
 254:../freeRTOS750/lib_fatf/xmodem.c **** 				_outbyte(CAN);
 1152               	.LM126:
 1153 054c 88E1      		ldi r24,lo8(24)
 1154 054e 90E0      		ldi r25,0
 1155 0550 0E94 0000 		call _outbyte
 255:../freeRTOS750/lib_fatf/xmodem.c **** 				_outbyte(CAN);
 1157               	.LM127:
 1158 0554 88E1      		ldi r24,lo8(24)
 1159 0556 90E0      		ldi r25,0
 1160 0558 0E94 0000 		call _outbyte
 256:../freeRTOS750/lib_fatf/xmodem.c **** 				flushinput();
 1162               	.LM128:
 1163 055c 0E94 0000 		call flushinput
 257:../freeRTOS750/lib_fatf/xmodem.c **** 				return -4; /* xmit error */
 1165               	.LM129:
 1166 0560 8CEF      		ldi r24,lo8(-4)
 1167 0562 00C0      		rjmp .L53
 1168               	.L56:
 258:../freeRTOS750/lib_fatf/xmodem.c **** 			}
 259:../freeRTOS750/lib_fatf/xmodem.c **** 			else {
 260:../freeRTOS750/lib_fatf/xmodem.c **** 				for (retry = 0; retry < 10; ++retry) {
 261:../freeRTOS750/lib_fatf/xmodem.c **** 					_outbyte(EOT);
 1170               	.LM130:
 1171 0564 84E0      		ldi r24,lo8(4)
 1172 0566 90E0      		ldi r25,0
 1173 0568 0E94 0000 		call _outbyte
 1174               	.LBB31:
 262:../freeRTOS750/lib_fatf/xmodem.c **** 					if ((c = _inbyte((DLY_1S)<<1)) == ACK) break;
 1176               	.LM131:
 1177 056c 80ED      		ldi r24,lo8(-48)
 1178 056e 97E0      		ldi r25,lo8(7)
 1179 0570 0E94 0000 		call _inbyte
 1180 0574 8C01      		movw r16,r24
 1181 0576 8630      		cpi r24,6
 1182 0578 9105      		cpc r25,__zero_reg__
 1183 057a 01F0      		breq .L71
 1184 057c FA94      		dec r15
 1185               	.LBE31:
 260:../freeRTOS750/lib_fatf/xmodem.c **** 				for (retry = 0; retry < 10; ++retry) {
 1187               	.LM132:
 1188 057e 01F4      		brne .L56
 1189               	.L71:
 263:../freeRTOS750/lib_fatf/xmodem.c **** 				}
 264:../freeRTOS750/lib_fatf/xmodem.c **** 				flushinput();
 1191               	.LM133:
 1192 0580 0E94 0000 		call flushinput
 265:../freeRTOS750/lib_fatf/xmodem.c **** 				return (c == ACK)?len:-5;
 1194               	.LM134:
 1195 0584 0630      		cpi r16,6
 1196 0586 1105      		cpc r17,__zero_reg__
 1197 0588 01F4      		brne .L74
 1199               	.LM135:
 1200 058a 8C2D      		mov r24,r12
 1201 058c 00C0      		rjmp .L53
 1202               	.L74:
 1204               	.LM136:
 1205 058e 8BEF      		ldi r24,lo8(-5)
 1206               	.L53:
 1207               	/* epilogue start */
 1208               	.LBE24:
 266:../freeRTOS750/lib_fatf/xmodem.c **** 			}
 267:../freeRTOS750/lib_fatf/xmodem.c **** 		}
 268:../freeRTOS750/lib_fatf/xmodem.c **** 	}
 269:../freeRTOS750/lib_fatf/xmodem.c **** }
 1210               	.LM137:
 1211 0590 C65F      		subi r28,-10
 1212 0592 DB4F      		sbci r29,-5
 1213 0594 0FB6      		in __tmp_reg__,__SREG__
 1214 0596 F894      		cli
 1215 0598 DEBF      		out __SP_H__,r29
 1216 059a 0FBE      		out __SREG__,__tmp_reg__
 1217 059c CDBF      		out __SP_L__,r28
 1218 059e DF91      		pop r29
 1219 05a0 CF91      		pop r28
 1220 05a2 1F91      		pop r17
 1221 05a4 0F91      		pop r16
 1222 05a6 FF90      		pop r15
 1223 05a8 EF90      		pop r14
 1224 05aa DF90      		pop r13
 1225 05ac CF90      		pop r12
 1226 05ae BF90      		pop r11
 1227 05b0 AF90      		pop r10
 1228 05b2 9F90      		pop r9
 1229 05b4 8F90      		pop r8
 1230 05b6 7F90      		pop r7
 1231 05b8 6F90      		pop r6
 1232 05ba 5F90      		pop r5
 1233 05bc 4F90      		pop r4
 1234 05be 3F90      		pop r3
 1235 05c0 2F90      		pop r2
 1236 05c2 0895      		ret
 1247               	.Lscope3:
 1249               		.stabd	78,0,0
 1251               	.Letext0:
 1252               		.ident	"GCC: (GNU) 4.7.2"
DEFINED SYMBOLS
                            *ABS*:00000000 xmodem.c
     /tmp/ccMetnUX.s:2      *ABS*:0000003e __SP_H__
     /tmp/ccMetnUX.s:3      *ABS*:0000003d __SP_L__
     /tmp/ccMetnUX.s:4      *ABS*:0000003f __SREG__
     /tmp/ccMetnUX.s:5      *ABS*:00000000 __tmp_reg__
     /tmp/ccMetnUX.s:6      *ABS*:00000001 __zero_reg__
     /tmp/ccMetnUX.s:109    .text:00000000 flushinput
     /tmp/ccMetnUX.s:141    .text:0000000e xmodemReceive
     /tmp/ccMetnUX.s:741    .text:0000032a xmodemTransmit

UNDEFINED SYMBOLS
_inbyte
_outbyte
crc16_ccitt
memcpy
